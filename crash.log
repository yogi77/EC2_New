2021/04/09 10:10:32 [INFO] Terraform version: 0.12.7  
2021/04/09 10:10:32 [INFO] Go runtime version: go1.12.9
2021/04/09 10:10:32 [INFO] CLI args: []string{"C:\\terraform\\terraform.exe", "plan"}
2021/04/09 10:10:32 [DEBUG] Attempting to open CLI config file: C:\Users\sri\AppData\Roaming\terraform.rc
2021/04/09 10:10:32 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/04/09 10:10:32 [INFO] CLI command args: []string{"plan"}
2021/04/09 10:10:32 [TRACE] Meta.Backend: built configuration for "s3" backend with hash value 4178783972
2021/04/09 10:10:32 [TRACE] Preserving existing state lineage "ace18d37-e353-7114-722e-58ab0b86fc2c"
2021/04/09 10:10:32 [TRACE] Preserving existing state lineage "ace18d37-e353-7114-722e-58ab0b86fc2c"
2021/04/09 10:10:32 [TRACE] Meta.Backend: working directory was previously initialized for "s3" backend
2021/04/09 10:10:32 [TRACE] Meta.Backend: using already-initialized, unchanged "s3" backend configuration
2021/04/09 10:10:32 [INFO] Setting AWS metadata API timeout to 100ms
2021/04/09 10:10:32 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2021/04/09 10:10:32 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2021/04/09 10:10:32 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2021/04/09 10:10:34 [TRACE] Meta.Backend: instantiated backend of type *s3.Backend
2021/04/09 10:10:34 [DEBUG] checking for provider in "."
2021/04/09 10:10:34 [DEBUG] checking for provider in "C:\\terraform"
2021/04/09 10:10:34 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2021/04/09 10:10:34 [DEBUG] found provider "terraform-provider-aws_v3.35.0_x5.exe"
2021/04/09 10:10:34 [DEBUG] found provider "terraform-provider-template_v2.2.0_x4.exe"
2021/04/09 10:10:34 [DEBUG] found valid plugin: "aws", "3.35.0", "C:\\Users\\sri\\Desktop\\terraform-module\\ec2\\.terraform\\plugins\\windows_amd64\\terraform-provider-aws_v3.35.0_x5.exe"
2021/04/09 10:10:34 [DEBUG] found valid plugin: "template", "2.2.0", "C:\\Users\\sri\\Desktop\\terraform-module\\ec2\\.terraform\\plugins\\windows_amd64\\terraform-provider-template_v2.2.0_x4.exe"
2021/04/09 10:10:34 [DEBUG] checking for provisioner in "."
2021/04/09 10:10:34 [DEBUG] checking for provisioner in "C:\\terraform"
2021/04/09 10:10:34 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2021/04/09 10:10:34 [TRACE] Meta.Backend: backend *s3.Backend does not support operations, so wrapping it in a local backend
2021/04/09 10:10:34 [INFO] backend/local: starting Plan operation
2021/04/09 10:10:34 [TRACE] backend/local: requesting state manager for workspace "default"
2021/04/09 10:10:36 [TRACE] backend/local: requesting state lock for workspace "default"
2021/04/09 10:10:36 [TRACE] backend/local: reading remote state for workspace "default"
2021/04/09 10:10:38 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/04/09 10:10:38 [TRACE] backend/local: building context for current working directory
2021/04/09 10:10:38 [TRACE] terraform.NewContext: starting
2021/04/09 10:10:38 [TRACE] terraform.NewContext: resolving provider version selections
2021/04/09 10:10:41 [TRACE] terraform.NewContext: loading provider schemas
2021/04/09 10:10:41 [TRACE] LoadSchemas: retrieving schema for provider type "aws"
2021-04-09T10:10:41.110+0530 [INFO]  plugin: configuring client automatic mTLS
2021-04-09T10:10:41.156+0530 [DEBUG] plugin: starting plugin: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe args=[C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe]
2021-04-09T10:10:41.162+0530 [DEBUG] plugin: plugin started: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe pid=10860
2021-04-09T10:10:41.162+0530 [DEBUG] plugin: waiting for RPC address: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe
2021-04-09T10:10:41.228+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: configuring server automatic mTLS: timestamp=2021-04-09T10:10:41.228+0530
2021-04-09T10:10:41.299+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2021-04-09T10:10:41.299+0530
2021-04-09T10:10:41.300+0530 [DEBUG] plugin: using plugin: version=5
2021/04/09 10:10:41 [TRACE] GRPCProvider: GetSchema
2021/04/09 10:10:41 [TRACE] GRPCProvider: Close
2021-04-09T10:10:41.548+0530 [DEBUG] plugin: plugin process exited: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe pid=10860
2021-04-09T10:10:41.548+0530 [DEBUG] plugin: plugin exited
2021/04/09 10:10:41 [TRACE] LoadSchemas: retrieving schema for provider type "template"
2021-04-09T10:10:41.548+0530 [INFO]  plugin: configuring client automatic mTLS
2021-04-09T10:10:41.593+0530 [DEBUG] plugin: starting plugin: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe args=[C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe]
2021-04-09T10:10:41.595+0530 [DEBUG] plugin: plugin started: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe pid=9284
2021-04-09T10:10:41.595+0530 [DEBUG] plugin: waiting for RPC address: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe
2021-04-09T10:10:41.609+0530 [INFO]  plugin.terraform-provider-template_v2.2.0_x4.exe: configuring server automatic mTLS: timestamp=2021-04-09T10:10:41.608+0530
2021-04-09T10:10:41.660+0530 [DEBUG] plugin: using plugin: version=5
2021-04-09T10:10:41.660+0530 [DEBUG] plugin.terraform-provider-template_v2.2.0_x4.exe: plugin address: network=tcp address=127.0.0.1:10000 timestamp=2021-04-09T10:10:41.660+0530
2021/04/09 10:10:41 [TRACE] GRPCProvider: GetSchema
2021/04/09 10:10:41 [TRACE] GRPCProvider: Close
2021-04-09T10:10:41.767+0530 [DEBUG] plugin: plugin process exited: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe pid=9284
2021-04-09T10:10:41.767+0530 [DEBUG] plugin: plugin exited
2021/04/09 10:10:41 [TRACE] terraform.NewContext: complete
2021/04/09 10:10:41 [TRACE] backend/local: finished building terraform.Context
2021/04/09 10:10:41 [TRACE] backend/local: requesting interactive input, if necessary
2021/04/09 10:10:41 [TRACE] Context.Input: Prompting for variables
2021/04/09 10:10:41 [TRACE] Context.Input: Prompting for provider arguments
2021/04/09 10:10:41 [TRACE] Context.Input: Provider provider.aws declared at main.tf:1,1-15
2021/04/09 10:10:41 [TRACE] Context.Input: Provider provider.template implied by data block at iam.tf:15,1-37
2021/04/09 10:10:41 [TRACE] Context.Input: Input for provider.template: map[string]cty.Value{}
2021/04/09 10:10:41 [TRACE] Context.Input: Input for provider.aws: map[string]cty.Value{}
2021/04/09 10:10:41 [TRACE] backend/local: running validation operation
2021/04/09 10:10:41 [INFO] terraform: building graph: GraphTypeValidate
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/04/09 10:10:41 [TRACE] ConfigTransformer: Starting for path: 
2021/04/09 10:10:41 [TRACE] ConfigTransformer: Starting for path: ec2_policy
2021/04/09 10:10:41 [TRACE] ConfigTransformer: Starting for path: ec2_role
2021/04/09 10:10:41 [TRACE] ConfigTransformer: Starting for path: myec2-instance
2021/04/09 10:10:41 [TRACE] ConfigTransformer: Starting for path: mysubnet
2021/04/09 10:10:41 [TRACE] ConfigTransformer: Starting for path: myvpc
2021/04/09 10:10:41 [TRACE] ConfigTransformer: Starting for path: securitygroup
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
data.aws_availability_zones.available - *terraform.NodeValidatableResource
data.aws_caller_identity.current - *terraform.NodeValidatableResource
data.template_file.ec2policy - *terraform.NodeValidatableResource
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.LocalTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
data.aws_availability_zones.available - *terraform.NodeValidatableResource
data.aws_caller_identity.current - *terraform.NodeValidatableResource
data.template_file.ec2policy - *terraform.NodeValidatableResource
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
data.aws_availability_zones.available - *terraform.NodeValidatableResource
data.aws_caller_identity.current - *terraform.NodeValidatableResource
data.template_file.ec2policy - *terraform.NodeValidatableResource
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.StateTransformer
2021/04/09 10:10:41 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "module.ec2_role.aws_iam_role.create_iam_role" (*terraform.NodeValidatableResource) config from ..\modules\aws-iam-role\main.tf:3,1-42
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.ec2_profile" (*terraform.NodeValidatableResource) config from iam.tf:29,1-50
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_caller_identity.current" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:10, Column:1, Byte:164}, End:hcl.Pos{Line:10, Column:37, Byte:200}}
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.prod-igw" (*terraform.NodeValidatableResource) config from main.tf:59,1-43
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.ec2rolepolicy" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"iam.tf", Start:hcl.Pos{Line:15, Column:1, Byte:324}, End:hcl.Pos{Line:15, Column:37, Byte:360}}
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.available" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:8, Column:1, Byte:118}, End:hcl.Pos{Line:8, Column:42, Byte:159}}
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "module.securitygroup.data.aws_caller_identity.securitygroup" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"..\\modules\\securitygroup\\main.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:43, Byte:42}}
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "module.ec2_role.data.aws_caller_identity.current" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"..\\modules\\aws-iam-role\\main.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:37, Byte:36}}
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "module.myec2-instance.aws_instance.ec2" (*terraform.NodeValidatableResource) config from ..\modules\ec2-instance\main.tf:1,1-30
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.ec2policy" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"iam.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:33, Byte:32}}
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "module.myvpc.aws_vpc.create_vpc" (*terraform.NodeValidatableResource) config from ..\modules\vpc\main.tf:1,1-32
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "aws_ebs_volume.createebsvolume" (*terraform.NodeValidatableResource) config from main.tf:27,1-44
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.prod-public-crt" (*terraform.NodeValidatableResource) config from main.tf:64,1-45
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "module.securitygroup.aws_security_group.create_security_group" (*terraform.NodeValidatableResource) config from ..\modules\securitygroup\main.tf:5,1-54
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "module.ec2_policy.aws_iam_policy.create_iam_policy" (*terraform.NodeValidatableResource) config from ..\modules\aws-iam-policy\main.tf:1,1-46
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "aws_volume_attachment.attachebsvolume" (*terraform.NodeValidatableResource) config from main.tf:20,1-51
2021/04/09 10:10:41 [TRACE] AttachResourceConfigTransformer: attaching to "module.mysubnet.aws_subnet.createsubnet" (*terraform.NodeValidatableResource) config from ..\modules\subnet\main.tf:1,1-37
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
data.aws_availability_zones.available - *terraform.NodeValidatableResource
data.aws_caller_identity.current - *terraform.NodeValidatableResource
data.template_file.ec2policy - *terraform.NodeValidatableResource
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
data.aws_availability_zones.available - *terraform.NodeValidatableResource
data.aws_caller_identity.current - *terraform.NodeValidatableResource
data.template_file.ec2policy - *terraform.NodeValidatableResource
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/04/09 10:10:41 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from main.tf:1,1-15
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
data.aws_availability_zones.available - *terraform.NodeValidatableResource
data.aws_caller_identity.current - *terraform.NodeValidatableResource
data.template_file.ec2policy - *terraform.NodeValidatableResource
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/04/09 10:10:41 [DEBUG] adding implicit provider configuration provider.template, implied first by data.template_file.ec2policy
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
data.aws_availability_zones.available - *terraform.NodeValidatableResource
data.aws_caller_identity.current - *terraform.NodeValidatableResource
data.template_file.ec2policy - *terraform.NodeValidatableResource
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.ec2_policy.aws_iam_policy.create_iam_policy is provided by module.ec2_policy.provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: aws_iam_instance_profile.ec2_profile is provided by provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: data.aws_caller_identity.current is provided by provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: data.template_file.ec2policy is provided by provider.template or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: aws_ebs_volume.createebsvolume is provided by provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: aws_volume_attachment.attachebsvolume is provided by provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.mysubnet.aws_subnet.createsubnet is provided by module.mysubnet.provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.ec2_role.aws_iam_role.create_iam_role is provided by module.ec2_role.provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: aws_internet_gateway.prod-igw is provided by provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: data.template_file.ec2rolepolicy is provided by provider.template or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: data.aws_availability_zones.available is provided by provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.securitygroup.data.aws_caller_identity.securitygroup is provided by module.securitygroup.provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.ec2_role.data.aws_caller_identity.current is provided by module.ec2_role.provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.myec2-instance.aws_instance.ec2 is provided by module.myec2-instance.provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.myvpc.aws_vpc.create_vpc is provided by module.myvpc.provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: aws_route_table.prod-public-crt is provided by provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.securitygroup.aws_security_group.create_security_group is provided by module.securitygroup.provider.aws or inherited equivalent
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.ec2_policy.aws_iam_policy.create_iam_policy uses inherited configuration provider.aws
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "module.ec2_policy.aws_iam_policy.create_iam_policy" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_volume_attachment.attachebsvolume
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "aws_volume_attachment.attachebsvolume" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.prod-igw
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "aws_internet_gateway.prod-igw" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.myvpc.aws_vpc.create_vpc uses inherited configuration provider.aws
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "module.myvpc.aws_vpc.create_vpc" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table.prod-public-crt
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "aws_route_table.prod-public-crt" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_caller_identity.current
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "data.aws_caller_identity.current" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_file.ec2policy
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "data.template_file.ec2policy" (*terraform.NodeValidatableResource) needs provider.template
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.mysubnet.aws_subnet.createsubnet uses inherited configuration provider.aws
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "module.mysubnet.aws_subnet.createsubnet" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_availability_zones.available
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "data.aws_availability_zones.available" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.ec2_role.aws_iam_role.create_iam_role uses inherited configuration provider.aws
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "module.ec2_role.aws_iam_role.create_iam_role" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_file.ec2rolepolicy
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "data.template_file.ec2rolepolicy" (*terraform.NodeValidatableResource) needs provider.template
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.securitygroup.data.aws_caller_identity.securitygroup uses inherited configuration provider.aws
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "module.securitygroup.data.aws_caller_identity.securitygroup" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.myec2-instance.aws_instance.ec2 uses inherited configuration provider.aws
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "module.myec2-instance.aws_instance.ec2" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_instance_profile.ec2_profile
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.ec2_profile" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_ebs_volume.createebsvolume
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "aws_ebs_volume.createebsvolume" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.ec2_role.data.aws_caller_identity.current uses inherited configuration provider.aws
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "module.ec2_role.data.aws_caller_identity.current" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] ProviderTransformer: module.securitygroup.aws_security_group.create_security_group uses inherited configuration provider.aws
2021/04/09 10:10:41 [DEBUG] ProviderTransformer: "module.securitygroup.aws_security_group.create_security_group" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/04/09 10:10:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.prod-igw
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.ec2rolepolicy
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.available
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to module.myec2-instance.aws_instance.ec2
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.prod-public-crt
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.ec2_profile
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_caller_identity.current
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.ec2policy
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_ebs_volume.createebsvolume
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.template
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_volume_attachment.attachebsvolume
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:41 [TRACE] AttachSchemaTransformer: attaching resource schema to module.ec2_role.aws_iam_role.create_iam_role
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "data.template_file.ec2policy" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.var.vpcname" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.id" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "output.vpcid" references: [module.myvpc.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.var.description" references: [var.description]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.var.iam_role_json" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.key_name" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.var.region" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.instances" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.AWS_ACCESS_KEY var.AWS_SECRET_KEY]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "aws_ebs_volume.createebsvolume" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.description" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.placement_group" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.instance_type" references: [var.instance_type]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_delete_on_termination" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ec2_profile" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.monitoring" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_optimized" references: [var.ebs_optimized]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.id" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.enable_classiclink" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.cidr_block_vpc" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.AWS_SECRET_KEY" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.dataclass" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.get_password_data" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.output.arn" references: [module.mysubnet.aws_subnet.createsubnet]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.owner" references: [var.owner]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_iops" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.var.tags" references: [local.mysubnet_tags]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "provider.template" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "aws_volume_attachment.attachebsvolume" references: [module.myec2-instance.output.id module.myec2-instance.output.id aws_ebs_volume.createebsvolume]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.var.force_detach_policies" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.associate_public_ip_address" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.aws_subnet.createsubnet" references: [module.mysubnet.var.cidr_block module.mysubnet.var.tags module.mysubnet.var.vpc_id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "local.mysubnet_tags" references: [var.env var.region]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.backends3_bucket" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.env" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.var.json_path" references: [data.template_file.ec2rolepolicy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.host_id" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.enable_dns_support" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.root_volume_size" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.enable_dns_hostnames" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.encrypted" references: [var.root_encrypted]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.suffix" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.placement_group" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.aws_iam_role.create_iam_role" references: [module.ec2_role.var.json_path module.ec2_role.var.force_detach_policies module.ec2_role.var.tags module.ec2_role.var.suffix module.ec2_role.local.suffix_name module.ec2_role.var.iam_role_name]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "local.ec2_tags" references: [var.env var.region]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.instance_state" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.availability_zone" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.output.id" references: [module.mysubnet.aws_subnet.createsubnet]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.var.tags" references: [local.tags]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.cpu_core_count" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.cpu_threads_per_core" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.var.cidr_block" references: [var.cidr_block_vpc]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.var.name" references: [var.securitygroupname]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.iam_policy_json" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.var.suffix" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.env" references: [var.env]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.network_interface_id" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.user_data_base64" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.arn" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.public_ip" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.output.id" references: [module.securitygroup.aws_security_group.create_security_group]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_iops" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.availability_zone" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "aws_internet_gateway.prod-igw" references: [module.myvpc.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "data.template_file.ec2rolepolicy" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.ebs_volume_size" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.root_volume_type" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.owner" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ipv6_address" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.available" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.data.aws_caller_identity.securitygroup" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "output.iam_instance_profile" references: [aws_iam_instance_profile.ec2_profile]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.encrypted" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.root_encrypted" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.var.vpc_id" references: [module.myvpc.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.output.arn" references: [module.ec2_role.aws_iam_role.create_iam_role]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "output.securitygroupid" references: [module.securitygroup.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.iampolicyname" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.name" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.subnet_id" references: [module.mysubnet.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.var.availabilityZone" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.data.aws_caller_identity.current" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.aws_instance.ec2" references: [module.myec2-instance.var.instances module.myec2-instance.var.tags module.myec2-instance.var.iam_instance_profile module.myec2-instance.var.ebs_optimized module.myec2-instance.var.ami module.myec2-instance.var.disable_api_termination module.myec2-instance.var.monitoring module.myec2-instance.var.volume_tags module.myec2-instance.var.instance_type module.myec2-instance.var.root_volume_size module.myec2-instance.var.root_volume_type module.myec2-instance.var.root_delete_on_termination module.myec2-instance.var.root_encrypted module.myec2-instance.var.ebs_volume_size module.myec2-instance.var.ebs_device_name module.myec2-instance.var.ebs_delete_on_termination module.myec2-instance.var.ebs_volume_type module.myec2-instance.var.encrypted]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.password_data" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.instance_tenancy" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.iampolicyname" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.json_path" references: [data.template_file.ec2policy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.var.region" references: [var.region]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.aws_vpc.create_vpc" references: [module.myvpc.var.enable_dns_support module.myvpc.var.instance_tenancy module.myvpc.var.cidr_block module.myvpc.var.enable_classiclink module.myvpc.var.tags module.myvpc.var.enable_dns_hostnames]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.backends3prefix" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ami" references: [var.ami]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_encrypted" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.var.instance_tenancy" references: [var.instance_tenancy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.source_dest_check" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "aws_route_table.prod-public-crt" references: [module.myvpc.output.id aws_internet_gateway.prod-igw]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.aws_security_group.create_security_group" references: [module.securitygroup.var.tags module.securitygroup.var.vpc_id module.securitygroup.var.name]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.private_dns" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.instance_type" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.AWS_ACCESS_KEY" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_delete_on_termination" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.iamrolename" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.ami" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.path" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_device_name" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_volume_type" references: [var.root_volume_type]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_snapshot_id" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.aws_iam_policy.create_iam_policy" references: [module.ec2_policy.var.path module.ec2_policy.var.description module.ec2_policy.var.json_path]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "local.iam_role_tags" references: [var.env var.region]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.env" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.dataclass" references: [var.dataclass]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.subnet_name" references: [var.subnet_name]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "local.tags" references: [var.env var.region]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.policy" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.output.arn" references: [module.securitygroup.aws_security_group.create_security_group]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.output.description" references: [module.securitygroup.aws_security_group.create_security_group]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.subnet_name" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.disable_api_termination" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.volume_tags" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_encrypted" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.var.region" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.var.enable_dns_hostnames" references: [var.enable_dns_hostnames]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.private_ip" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.output.id" references: [module.myvpc.aws_vpc.create_vpc]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "output.id" references: [module.myec2-instance.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.securitygroupname" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.var.vpc_id" references: [module.myvpc.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.vpc_security_group_ids" references: [module.securitygroup.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.var.enable_classiclink" references: [var.enable_classiclink]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.local.suffix_name" references: [module.ec2_policy.var.iampolicyname]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.public_dns" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.securitygroup.output.name" references: [module.securitygroup.aws_security_group.create_security_group]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.cidr_block" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.disable_api_termination" references: [var.disable_api_termination]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.var.cidr_block" references: [var.subnetcidr_block]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.instance_count" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.availability_zone" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_volume_type" references: [var.ebs_volume_type]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.var.region" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.tenancy" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.mysubnet.var.map_public_ip_on_launch" references: [var.map_public_ip_on_launch]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.ec2_profile" references: [module.ec2_role.var.iam_role_json module.ec2_role.var.iam_role_json module.ec2_role.var.force_detach_policies module.ec2_role.var.force_detach_policies module.ec2_role.var.json_path module.ec2_role.var.json_path module.ec2_role.aws_iam_role.create_iam_role module.ec2_role.aws_iam_role.create_iam_role module.ec2_role.var.suffix module.ec2_role.var.suffix module.ec2_role.output.arn module.ec2_role.data.aws_caller_identity.current module.ec2_role.data.aws_caller_identity.current module.ec2_role.var.region module.ec2_role.var.region module.ec2_role.var.env module.ec2_role.var.env module.ec2_role.var.iam_role_name module.ec2_role.var.iam_role_name module.ec2_role.output.uniqe_id module.ec2_role.output.id module.ec2_role.output.name module.ec2_role.var.tags module.ec2_role.var.tags module.ec2_role.local.suffix_name module.ec2_role.local.suffix_name module.ec2_role.output.name module.ec2_role.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.arn" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.path" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.primary_network_interface_id" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.ebs_optimized" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.description" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "data.aws_caller_identity.current" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "output.subetid" references: [module.mysubnet.output.id]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.subnetcidr_block" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.var.env" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.tags" references: [local.ec2_tags]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.subnet_id" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.output.arn" references: [module.myvpc.aws_vpc.create_vpc]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.private_ip" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.var.tags" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.ebs_volume_type" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.var.iam_role_name" references: [var.iamrolename]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_volume_size" references: [var.ebs_volume_size]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.instance_initiated_shutown_behavior" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myvpc.var.enable_dns_support" references: [var.enable_dns_support]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ipv6_address_count" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.name" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.output.uniqe_id" references: [module.ec2_role.aws_iam_role.create_iam_role]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.output.id" references: [module.ec2_role.aws_iam_role.create_iam_role]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.output.name" references: [module.ec2_role.aws_iam_role.create_iam_role]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.var.tags" references: [local.iam_role_tags]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.iam_instance_profile" references: [aws_iam_instance_profile.ec2_profile]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.ec2_role.local.suffix_name" references: [module.ec2_role.var.iam_role_name]
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.description" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "var.map_public_ip_on_launch" references: []
2021/04/09 10:10:41 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_volume_size" references: [var.root_volume_size]
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeValidatableResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_caller_identity.current - *terraform.NodeValidatableResource
  data.template_file.ec2policy - *terraform.NodeValidatableResource
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  local.ec2_tags - *terraform.NodeLocal
  local.iam_role_tags - *terraform.NodeLocal
  local.mysubnet_tags - *terraform.NodeLocal
  local.tags - *terraform.NodeLocal
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  output.iam_instance_profile - *terraform.NodeApplyableOutput
  output.id - *terraform.NodeApplyableOutput
  output.securitygroupid - *terraform.NodeApplyableOutput
  output.subetid - *terraform.NodeApplyableOutput
  output.vpcid - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
  var.ami - *terraform.NodeRootVariable
  var.availability_zone - *terraform.NodeRootVariable
  var.backends3_bucket - *terraform.NodeRootVariable
  var.backends3prefix - *terraform.NodeRootVariable
  var.cidr_block - *terraform.NodeRootVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
  var.dataclass - *terraform.NodeRootVariable
  var.description - *terraform.NodeRootVariable
  var.disable_api_termination - *terraform.NodeRootVariable
  var.ebs_optimized - *terraform.NodeRootVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
  var.enable_classiclink - *terraform.NodeRootVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
  var.enable_dns_support - *terraform.NodeRootVariable
  var.encrypted - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.iampolicyname - *terraform.NodeRootVariable
  var.iamrolename - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.instance_tenancy - *terraform.NodeRootVariable
  var.instance_type - *terraform.NodeRootVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
  var.name - *terraform.NodeRootVariable
  var.owner - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.root_encrypted - *terraform.NodeRootVariable
  var.root_volume_size - *terraform.NodeRootVariable
  var.root_volume_type - *terraform.NodeRootVariable
  var.securitygroupname - *terraform.NodeRootVariable
  var.subnet_name - *terraform.NodeRootVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeValidatableResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_caller_identity.current - *terraform.NodeValidatableResource
  data.template_file.ec2policy - *terraform.NodeValidatableResource
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  local.ec2_tags - *terraform.NodeLocal
  local.iam_role_tags - *terraform.NodeLocal
  local.mysubnet_tags - *terraform.NodeLocal
  local.tags - *terraform.NodeLocal
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  output.iam_instance_profile - *terraform.NodeApplyableOutput
  output.id - *terraform.NodeApplyableOutput
  output.securitygroupid - *terraform.NodeApplyableOutput
  output.subetid - *terraform.NodeApplyableOutput
  output.vpcid - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
  var.ami - *terraform.NodeRootVariable
  var.availability_zone - *terraform.NodeRootVariable
  var.backends3_bucket - *terraform.NodeRootVariable
  var.backends3prefix - *terraform.NodeRootVariable
  var.cidr_block - *terraform.NodeRootVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
  var.dataclass - *terraform.NodeRootVariable
  var.description - *terraform.NodeRootVariable
  var.disable_api_termination - *terraform.NodeRootVariable
  var.ebs_optimized - *terraform.NodeRootVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
  var.enable_classiclink - *terraform.NodeRootVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
  var.enable_dns_support - *terraform.NodeRootVariable
  var.encrypted - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.iampolicyname - *terraform.NodeRootVariable
  var.iamrolename - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.instance_tenancy - *terraform.NodeRootVariable
  var.instance_type - *terraform.NodeRootVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
  var.name - *terraform.NodeRootVariable
  var.owner - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.root_encrypted - *terraform.NodeRootVariable
  var.root_volume_size - *terraform.NodeRootVariable
  var.root_volume_type - *terraform.NodeRootVariable
  var.securitygroupname - *terraform.NodeRootVariable
  var.subnet_name - *terraform.NodeRootVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeValidatableResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.ec2policy - *terraform.NodeValidatableResource
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_caller_identity.current - *terraform.NodeValidatableResource
  data.template_file.ec2policy - *terraform.NodeValidatableResource
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  local.ec2_tags - *terraform.NodeLocal
  local.iam_role_tags - *terraform.NodeLocal
  local.mysubnet_tags - *terraform.NodeLocal
  local.tags - *terraform.NodeLocal
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  output.iam_instance_profile - *terraform.NodeApplyableOutput
  output.id - *terraform.NodeApplyableOutput
  output.securitygroupid - *terraform.NodeApplyableOutput
  output.subetid - *terraform.NodeApplyableOutput
  output.vpcid - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.template - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
  var.ami - *terraform.NodeRootVariable
  var.availability_zone - *terraform.NodeRootVariable
  var.backends3_bucket - *terraform.NodeRootVariable
  var.backends3prefix - *terraform.NodeRootVariable
  var.cidr_block - *terraform.NodeRootVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
  var.dataclass - *terraform.NodeRootVariable
  var.description - *terraform.NodeRootVariable
  var.disable_api_termination - *terraform.NodeRootVariable
  var.ebs_optimized - *terraform.NodeRootVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
  var.enable_classiclink - *terraform.NodeRootVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
  var.enable_dns_support - *terraform.NodeRootVariable
  var.encrypted - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.iampolicyname - *terraform.NodeRootVariable
  var.iamrolename - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.instance_tenancy - *terraform.NodeRootVariable
  var.instance_type - *terraform.NodeRootVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
  var.name - *terraform.NodeRootVariable
  var.owner - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.root_encrypted - *terraform.NodeRootVariable
  var.root_volume_size - *terraform.NodeRootVariable
  var.root_volume_type - *terraform.NodeRootVariable
  var.securitygroupname - *terraform.NodeRootVariable
  var.subnet_name - *terraform.NodeRootVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeValidatableResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.ec2policy - *terraform.NodeValidatableResource
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/04/09 10:10:41 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_internet_gateway.prod-igw - *terraform.NodeValidatableResource
aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  aws_ebs_volume.createebsvolume - *terraform.NodeValidatableResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
data.aws_availability_zones.available - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
  output.iam_instance_profile - *terraform.NodeApplyableOutput
  output.id - *terraform.NodeApplyableOutput
  output.securitygroupid - *terraform.NodeApplyableOutput
  output.subetid - *terraform.NodeApplyableOutput
  output.vpcid - *terraform.NodeApplyableOutput
  var.availability_zone - *terraform.NodeRootVariable
  var.backends3_bucket - *terraform.NodeRootVariable
  var.backends3prefix - *terraform.NodeRootVariable
  var.cidr_block - *terraform.NodeRootVariable
  var.encrypted - *terraform.NodeRootVariable
  var.iampolicyname - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.name - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeValidatableResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeValidatableResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeValidatableResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeValidatableResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeValidatableResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_route_table.prod-public-crt - *terraform.NodeValidatableResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_caller_identity.current - *terraform.NodeValidatableResource
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeValidatableResource
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeValidatableResource
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeValidatableResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeValidatableResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.ec2policy - *terraform.NodeValidatableResource
  data.template_file.ec2rolepolicy - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:41 [DEBUG] Starting graph walk: walkValidate
2021/04/09 10:10:41 [TRACE] dag/walk: updating graph
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.vpc_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.public_dns"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.map_public_ip_on_launch"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.output.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.tenancy"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.path"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.suffix"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "local.ec2_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.user_data_base64"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.associate_public_ip_address"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.availability_zone"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.ebs_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.dataclass"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "data.template_file.ec2rolepolicy"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_snapshot_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.root_encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.instance_tenancy"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.var.enable_classiclink"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.public_ip"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.subnet_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_iops"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.backends3prefix"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.private_ip"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.placement_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.placement_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.availability_zone"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.iam_policy_json"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "output.iam_instance_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.iampolicyname"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.private_ip"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.ebs_optimized"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.key_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.AWS_SECRET_KEY"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.backends3_bucket"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.instance_state"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.output.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.password_data"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.availability_zone"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.subnetcidr_block"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "output.vpcid"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.json_path"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.disable_api_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.dataclass"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.var.vpcname"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "local.mysubnet_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.iampolicyname"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.path"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "data.template_file.ec2policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_optimized"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ami"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "output.subetid"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ipv6_address_count"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.cidr_block_vpc"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "aws_volume_attachment.attachebsvolume"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.network_interface_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.instance_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "output.securitygroupid"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.availabilityZone"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.instance_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.disable_api_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.var.cidr_block"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ipv6_address"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.root_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.owner"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.enable_dns_support"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.root_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "data.aws_caller_identity.current"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.var.enable_dns_support"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_delete_on_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.json_path"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.cpu_core_count"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.source_dest_check"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.prod-igw"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.available"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "root"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.iam_role_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.iam_role_json"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.monitoring"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.volume_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.subnet_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.enable_dns_hostnames"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "local.iam_role_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.output.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.subnet_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_iops"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.vpc_security_group_ids"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.securitygroupname"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.owner"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.suffix"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.cidr_block"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.get_password_data"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.map_public_ip_on_launch"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "provider.template"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.ebs_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "aws_route_table.prod-public-crt"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.ami"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.AWS_ACCESS_KEY"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.instance_initiated_shutown_behavior"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.output.uniqe_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.local.suffix_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.host_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.vpc_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_device_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.force_detach_policies"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "local.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_delete_on_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.cpu_threads_per_core"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.subnet_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.instances"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.enable_classiclink"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.mysubnet.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.var.instance_tenancy"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.local.suffix_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.primary_network_interface_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ec2_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.instance_count"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.private_dns"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.iamrolename"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.myvpc.var.enable_dns_hostnames"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "var.cidr_block"
2021/04/09 10:10:41 [TRACE] dag/walk: added new vertex: "module.ec2_role.data.aws_caller_identity.current"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.var.force_detach_policies"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.source_dest_check"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.aws_security_group.create_security_group" waiting on "module.securitygroup.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.output.description" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "output.vpcid" waiting on "module.myvpc.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.var.enable_dns_support" waiting on "var.enable_dns_support"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.aws_security_group.create_security_group" waiting on "module.securitygroup.var.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.ebs_optimized" waiting on "var.ebs_optimized"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.output.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.associate_public_ip_address"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.encrypted" waiting on "var.root_encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.subnet_name" waiting on "var.subnet_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_route_table.prod-public-crt" waiting on "aws_internet_gateway.prod-igw"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_device_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ami"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.password_data"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.root_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.private_ip"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.output.arn" waiting on "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.output.id" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.aws_subnet.createsubnet" waiting on "module.mysubnet.var.cidr_block"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.enable_dns_hostnames"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "local.tags" waiting on "var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.placement_group" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.aws_security_group.create_security_group" waiting on "module.securitygroup.var.vpc_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.host_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.subnet_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.aws_iam_policy.create_iam_policy" waiting on "module.ec2_policy.var.path"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.public_ip"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.var.enable_dns_hostnames" waiting on "var.enable_dns_hostnames"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.availability_zone"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.instance_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.enable_dns_support"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.placement_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.var.enable_classiclink" waiting on "var.enable_classiclink"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.output.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.iam_instance_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.var.vpc_id" waiting on "module.myvpc.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.output.description" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.var.suffix"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "data.aws_caller_identity.current" waiting on "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.public_dns" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.AWS_SECRET_KEY"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.instance_state" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.output.name" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.subnet_id" waiting on "module.mysubnet.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.private_dns" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.root_delete_on_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.output.policy" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.volume_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.output.arn" waiting on "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.output.id" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.output.path" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "local.mysubnet_tags" waiting on "var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.ec2rolepolicy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.ebs_encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "local.tags" waiting on "var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.var.json_path" waiting on "data.template_file.ec2policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myvpc.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.cidr_block"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.ami" waiting on "var.ami"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "output.iam_instance_profile" waiting on "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.root_volume_type" waiting on "var.root_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "local.ec2_tags" waiting on "var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.var.json_path"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.subnet_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.securitygroupid"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.root_iops"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "output.id" waiting on "module.myec2-instance.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.vpc_security_group_ids" waiting on "module.securitygroup.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.var.suffix"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.aws_iam_policy.create_iam_policy" waiting on "module.ec2_policy.var.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "data.aws_caller_identity.current"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.var.vpc_id" waiting on "module.myvpc.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.local.suffix_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.root_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "local.iam_role_tags" waiting on "var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.owner" waiting on "var.owner"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_volume_attachment.attachebsvolume" waiting on "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.output.path"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.private_dns"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.user_data_base64"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.securitygroup.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.backends3prefix"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.subnet_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.aws_caller_identity.current"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.output.id" waiting on "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_volume_attachment.attachebsvolume"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.placement_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.aws_availability_zones.available"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "data.template_file.ec2policy" waiting on "provider.template"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route_table.prod-public-crt"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "local.mysubnet_tags" waiting on "var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.mysubnet.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.private_ip"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.output.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.output.id" waiting on "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.instance_count"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.var.json_path" waiting on "data.template_file.ec2rolepolicy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.iam_instance_profile" waiting on "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.subnet_id" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.var.tags" waiting on "local.iam_role_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "output.securitygroupid" waiting on "module.securitygroup.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.dataclass"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.primary_network_interface_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.data.aws_caller_identity.securitygroup" waiting on "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.tags" waiting on "local.ec2_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.arn" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.availability_zone"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.output.name" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.env" waiting on "var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.cidr_block"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.var.cidr_block" waiting on "var.cidr_block_vpc"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.local.suffix_name" waiting on "module.ec2_policy.var.iampolicyname"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.public_ip" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.ec2policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.aws_subnet.createsubnet" waiting on "module.mysubnet.var.vpc_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.cpu_core_count"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.ipv6_address"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.securitygroup.output.name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.ebs_iops"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.output.arn" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.output.arn" waiting on "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.local.suffix_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.aws_iam_policy.create_iam_policy" waiting on "module.ec2_policy.var.json_path"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myvpc.var.vpcname"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.mysubnet.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.availability_zone" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_optimized"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.tenancy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.output.name" waiting on "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.aws_iam_policy.create_iam_policy" waiting on "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.availability_zone"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.local.suffix_name" waiting on "module.ec2_role.var.iam_role_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.instance_initiated_shutown_behavior"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.AWS_ACCESS_KEY"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.var.iam_role_json"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.public_dns"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.get_password_data"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.dataclass" waiting on "var.dataclass"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myvpc.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.output.policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.var.tags" waiting on "local.mysubnet_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.instances"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.owner"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.output.uniqe_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.aws_subnet.createsubnet" waiting on "module.mysubnet.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.var.name" waiting on "var.securitygroupname"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "data.aws_availability_zones.available" waiting on "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.key_name"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_volume_attachment.attachebsvolume"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.root_encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.var.iam_role_name" waiting on "var.iamrolename"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.data.aws_caller_identity.current"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.output.instance_state"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_delete_on_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "local.iam_role_tags" waiting on "var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.subetid"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.disable_api_termination" waiting on "var.disable_api_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.data.aws_caller_identity.current" waiting on "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route_table.prod-public-crt"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.output.arn"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.cpu_threads_per_core"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.var.tags" waiting on "local.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.id" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.primary_network_interface_id" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.ec2_profile"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.mysubnet.var.map_public_ip_on_launch"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "local.ec2_tags" waiting on "var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.disable_api_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.output.id" waiting on "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.instance_type" waiting on "var.instance_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.var.iam_policy_json"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.root_volume_size" waiting on "var.root_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_ebs_volume.createebsvolume" waiting on "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.var.map_public_ip_on_launch" waiting on "var.map_public_ip_on_launch"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.securitygroup.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.output.uniqe_id" waiting on "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_internet_gateway.prod-igw" waiting on "module.myvpc.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.monitoring"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.ebs_volume_type" waiting on "var.ebs_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.securitygroup.var.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.network_interface_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "data.template_file.ec2rolepolicy" waiting on "provider.template"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.ipv6_address_count"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "provider.aws"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_policy.output.arn" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.enable_classiclink"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.ec2_policy.var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.ebs_snapshot_id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.backends3_bucket"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.myec2-instance.var.vpc_security_group_ids"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.private_ip" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.vpcid"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "output.subetid" waiting on "module.mysubnet.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "data.aws_availability_zones.available"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.ec2_role.var.region" waiting on "var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "aws_volume_attachment.attachebsvolume" waiting on "module.myec2-instance.output.id"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.output.password_data" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.securitygroup.output.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.iampolicyname"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myec2-instance.var.ebs_volume_size" waiting on "var.ebs_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.mysubnet.var.cidr_block" waiting on "var.subnetcidr_block"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.instance_tenancy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.myvpc.var.instance_tenancy" waiting on "var.instance_tenancy"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.mysubnet.var.availabilityZone"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "module.securitygroup.var.description" waiting on "var.description"
2021/04/09 10:10:41 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.mysubnet.var.vpc_id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.vpc_security_group_ids", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.owner", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.data.aws_caller_identity.securitygroup", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.primary_network_interface_id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "aws_route_table.prod-public-crt", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.placement_group", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.subnet_id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.path", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.var.vpc_id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.env", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.var.name", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.enable_dns_support", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "data.template_file.ec2policy", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.var.json_path", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.local.suffix_name", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.output.uniqe_id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.arn", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "aws_iam_instance_profile.ec2_profile", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.aws_instance.ec2", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myvpc.aws_vpc.create_vpc", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.aws_iam_policy.create_iam_policy", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.mysubnet.output.id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.iam_instance_profile", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.subnet_id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.output.name", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.public_ip", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.output.arn", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.var.tags", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.password_data", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.var.iam_role_name", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.output.description", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.instance_state", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "local.ec2_tags", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.output.name", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myvpc.output.id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.instance_type", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.ebs_volume_size", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.description", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.private_dns", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.ami", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myvpc.output.arn", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.mysubnet.var.cidr_block", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.subnet_name", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "local.mysubnet_tags", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.output.id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.cidr_block", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "data.template_file.ec2rolepolicy", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.public_dns", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.arn", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.output.arn", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.root_volume_size", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.var.region", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.instance_tenancy", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.enable_classiclink", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.enable_dns_hostnames", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.root_volume_type", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "local.iam_role_tags", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "aws_ebs_volume.createebsvolume", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.aws_iam_role.create_iam_role", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "aws_volume_attachment.attachebsvolume", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.availability_zone", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "data.aws_availability_zones.available", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.disable_api_termination", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.prod-igw", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "output.vpcid", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.ebs_volume_type", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.mysubnet.output.arn", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "local.tags", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "output.iam_instance_profile", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "output.securitygroupid", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.tags", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.private_ip", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.mysubnet.aws_subnet.createsubnet", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.name", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.policy", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "output.id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.var.tags", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.local.suffix_name", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_role.data.aws_caller_identity.current", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.mysubnet.var.map_public_ip_on_launch", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "data.aws_caller_identity.current", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "output.subetid", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.output.id", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.dataclass", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.mysubnet.var.tags", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.ebs_optimized", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.encrypted", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.var.json_path", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.var.description", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: dependencies changed for "module.securitygroup.aws_security_group.create_security_group", sending new deps
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.ami"
2021/04/09 10:10:41 [TRACE] vertex "var.ami": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.subnet_name"
2021/04/09 10:10:41 [TRACE] vertex "var.subnet_name": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.ami": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_iops"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_iops": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.get_password_data"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.get_password_data": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.get_password_data": evaluating
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.securitygroupname"
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.get_password_data
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.ebs_volume_size"
2021/04/09 10:10:41 [TRACE] vertex "var.ebs_volume_size": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] vertex "var.encrypted": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.instance_initiated_shutown_behavior"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instance_initiated_shutown_behavior": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.securitygroup.var.region"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instance_initiated_shutown_behavior": evaluating
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_policy.var.suffix"
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.instance_initiated_shutown_behavior
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_device_name"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.user_data_base64"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.ebs_optimized"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.user_data_base64": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_encrypted"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_encrypted": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.host_id"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_encrypted": evaluating
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.host_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_delete_on_termination"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.host_id": evaluating
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_delete_on_termination": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.availability_zone"
2021/04/09 10:10:41 [TRACE] vertex "var.availability_zone": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_policy.var.description"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.iampolicyname"
2021/04/09 10:10:41 [TRACE] vertex "var.iampolicyname": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.iampolicyname": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.enable_classiclink"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.name"
2021/04/09 10:10:41 [TRACE] vertex "var.enable_classiclink": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_role.var.iam_role_json"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.availability_zone"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_role.var.suffix"
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.suffix": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.suffix": evaluating
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.instances"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.volume_tags"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.iamrolename"
2021/04/09 10:10:41 [TRACE] vertex "var.iamrolename": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.instance_count"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ec2_profile"
2021/04/09 10:10:41 [TRACE] vertex "var.instance_count": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.cidr_block"
2021/04/09 10:10:41 [TRACE] vertex "var.instance_count": visit complete
2021/04/09 10:10:41 [TRACE] vertex "var.cidr_block": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myvpc.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.map_public_ip_on_launch"
2021/04/09 10:10:41 [TRACE] vertex "var.map_public_ip_on_launch": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_device_name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.map_public_ip_on_launch": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.mysubnet.var.map_public_ip_on_launch"
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.map_public_ip_on_launch": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.volume_tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_device_name": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ebs_device_name
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.associate_public_ip_address"
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.associate_public_ip_address": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.iamrolename": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_role.var.iam_role_name"
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.iam_role_name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.cidr_block": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_delete_on_termination": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.root_delete_on_termination
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.subnetcidr_block"
2021/04/09 10:10:41 [TRACE] vertex "var.subnetcidr_block": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.subnetcidr_block": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.mysubnet.var.cidr_block"
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.cidr_block": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.cidr_block": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.root_delete_on_termination
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ebs_device_name
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.var.cidr_block
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.AWS_SECRET_KEY"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_device_name": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_role.var.force_detach_policies"
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.force_detach_policies": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "provider.template"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.user_data_base64": evaluating
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_delete_on_termination": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instances": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instances": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.var.suffix
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.instances
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.availability_zone": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.key_name"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.key_name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.key_name": evaluating
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.dataclass"
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.host_id
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ebs_encrypted
2021/04/09 10:10:41 [TRACE] vertex "var.securitygroupname": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.suffix": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_iops": evaluating
2021/04/09 10:10:41 [TRACE] vertex "var.subnet_name": visit complete
2021/04/09 10:10:41 [TRACE] vertex "var.ebs_volume_size": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.AWS_ACCESS_KEY"
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "var.encrypted": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.region": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.backends3_bucket"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_policy.var.iampolicyname"
2021/04/09 10:10:41 [TRACE] vertex "var.ebs_optimized": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.cpu_threads_per_core"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.tenancy"
2021/04/09 10:10:41 [TRACE] vertex "var.availability_zone": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.description": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.region"
2021/04/09 10:10:41 [TRACE] vertex "var.name": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_policy.var.path"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.disable_api_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_snapshot_id"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myvpc.var.vpcname"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_role.var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ami"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.ebs_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.cidr_block_vpc"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myvpc.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_policy.var.env"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.network_interface_id"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.root_encrypted"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ipv6_address_count"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.instance_tenancy"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.mysubnet.var.availabilityZone"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.instance_type"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ipv6_address"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.root_volume_type"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.placement_group"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.owner"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_policy.var.iam_policy_json"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_delete_on_termination"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.enable_dns_support"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_iops"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.root_volume_size"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.backends3prefix"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.cpu_core_count"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.source_dest_check"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.private_ip"
2021/04/09 10:10:41 [TRACE] vertex "var.enable_classiclink": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.iam_role_json": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.enable_dns_hostnames"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.monitoring"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.mysubnet.var.region"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "var.description"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ec2_profile": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.map_public_ip_on_launch": evaluating
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.var.map_public_ip_on_launch
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myvpc.var.tags
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.iam_role_name": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.var.iam_role_name
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.var.tags
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.tags": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "var.AWS_SECRET_KEY": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.AWS_SECRET_KEY": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.force_detach_policies": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.var.force_detach_policies
2021/04/09 10:10:41 [TRACE] vertex "provider.template": starting visit (*terraform.NodeApplyableProvider)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.var.cidr_block
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.cidr_block": visit complete
2021/04/09 10:10:41 [TRACE] vertex "provider.template": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: provider.template
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.var.force_detach_policies
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.force_detach_policies": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.availability_zone": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.availability_zone
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.key_name
2021/04/09 10:10:41 [TRACE] vertex "var.dataclass": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.dataclass": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.dataclass"
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.availability_zone
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.dataclass": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.availability_zone": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.dataclass": evaluating
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] vertex "var.securitygroupname": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.dataclass
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.securitygroup.var.name"
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.name": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.var.name
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.var.suffix
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.suffix": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.key_name
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.root_iops
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.subnet_name"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.subnet_name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.subnet_name": evaluating
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.subnet_name
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.var.name
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.name": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_volume_size"
2021-04-09T10:10:41.807+0530 [INFO]  plugin: configuring client automatic mTLS
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.root_iops
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_iops": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_volume_size": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_volume_size": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.subnet_name
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ebs_volume_size
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.subnet_name": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.instance_initiated_shutown_behavior
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instance_initiated_shutown_behavior": visit complete
2021/04/09 10:10:41 [TRACE] vertex "var.backends3_bucket": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.backends3_bucket": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.iampolicyname": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.iampolicyname": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.var.iampolicyname
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.var.iampolicyname
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.iampolicyname": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_policy.local.suffix_name"
2021/04/09 10:10:41 [TRACE] vertex "var.ebs_optimized": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_optimized"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_optimized": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_optimized": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ebs_optimized
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.cpu_threads_per_core": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.cpu_threads_per_core": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.cpu_threads_per_core
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.get_password_data
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.get_password_data": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.tenancy": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.tenancy": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.cpu_threads_per_core
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.tenancy
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.description": evaluating
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.cpu_threads_per_core": visit complete
2021/04/09 10:10:41 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.region": visit complete
2021/04/09 10:10:41 [TRACE] vertex "var.name": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.path": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.path": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.var.path
2021/04/09 10:10:41 [TRACE] vertex "var.disable_api_termination": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.disable_api_termination": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.disable_api_termination"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.disable_api_termination": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.disable_api_termination": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.disable_api_termination
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_role.var.region"
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.region": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.region": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.var.region
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_snapshot_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_snapshot_id": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ebs_snapshot_id
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.vpcname": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.vpcname": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myvpc.var.vpcname
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.env": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.env": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.var.env
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ami": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ami": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ami
2021/04/09 10:10:41 [TRACE] vertex "var.ebs_volume_type": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.ebs_volume_type": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_volume_type"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_volume_type": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_volume_type": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ebs_volume_type
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_encrypted": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_encrypted": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.root_encrypted
2021/04/09 10:10:41 [TRACE] vertex "var.cidr_block_vpc": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.cidr_block_vpc": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myvpc.var.cidr_block"
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.cidr_block": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.cidr_block": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myvpc.var.cidr_block
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.region": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.region": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myvpc.var.region
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.env": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.env": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.var.env
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.network_interface_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.network_interface_id": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.network_interface_id
2021/04/09 10:10:41 [TRACE] vertex "var.root_encrypted": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.root_encrypted": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.encrypted"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.encrypted": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.encrypted": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.encrypted
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ipv6_address_count": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ipv6_address_count": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ipv6_address_count
2021/04/09 10:10:41 [TRACE] vertex "var.instance_tenancy": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.instance_tenancy": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myvpc.var.instance_tenancy"
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.instance_tenancy": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.instance_tenancy": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myvpc.var.instance_tenancy
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.availabilityZone": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.availabilityZone": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.var.availabilityZone
2021/04/09 10:10:41 [TRACE] vertex "var.instance_type": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.instance_type": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.instance_type"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instance_type": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instance_type": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.instance_type
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ipv6_address": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ipv6_address": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ipv6_address
2021/04/09 10:10:41 [TRACE] vertex "var.root_volume_type": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.root_volume_type": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_volume_type"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_volume_type": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_volume_type": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.root_volume_type
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.placement_group": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.placement_group": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.placement_group
2021/04/09 10:10:41 [TRACE] vertex "var.owner": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.owner": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.owner"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.owner": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.owner": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.owner
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.iam_policy_json": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.iam_policy_json": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.var.iam_policy_json
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_delete_on_termination": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_delete_on_termination": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ebs_delete_on_termination
2021/04/09 10:10:41 [TRACE] vertex "var.enable_dns_support": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.enable_dns_support": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myvpc.var.enable_dns_support"
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_dns_support": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_dns_support": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myvpc.var.enable_dns_support
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_iops": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_iops": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ebs_iops
2021/04/09 10:10:41 [TRACE] vertex "var.root_volume_size": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.root_volume_size": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_volume_size"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_volume_size": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_volume_size": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.root_volume_size
2021/04/09 10:10:41 [TRACE] vertex "var.backends3prefix": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.backends3prefix": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.cpu_core_count": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.cpu_core_count": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.cpu_core_count
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.source_dest_check": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.source_dest_check": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.source_dest_check
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.private_ip": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.private_ip": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.private_ip
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myvpc.var.enable_classiclink"
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_classiclink": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_classiclink": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myvpc.var.enable_classiclink
2021/04/09 10:10:41 [TRACE] vertex "var.enable_dns_hostnames": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.enable_dns_hostnames": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myvpc.var.enable_dns_hostnames"
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_dns_hostnames": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_dns_hostnames": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myvpc.var.enable_dns_hostnames
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.iam_role_json": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.var.iam_role_json
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.monitoring": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.monitoring": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.monitoring
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.region": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.region": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.var.region
2021/04/09 10:10:41 [TRACE] vertex "var.description": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] vertex "var.description": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.securitygroup.var.description"
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.description": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.description": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.var.description
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ec2_profile": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.ec2_profile
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.volume_tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.volume_tags
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.associate_public_ip_address": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.associate_public_ip_address
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.var.iam_role_name
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.iam_role_name": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_role.local.suffix_name"
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.local.suffix_name": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.local.suffix_name": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.local.suffix_name
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.var.map_public_ip_on_launch
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.map_public_ip_on_launch": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.disable_api_termination
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.disable_api_termination": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.var.path
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.path": visit complete
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.var.region
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.region": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ebs_snapshot_id
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_snapshot_id": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.var.env
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.env": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.var.vpcname
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.vpcname": visit complete
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ami
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ami": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.root_encrypted
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_encrypted": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.suffix": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.var.suffix
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ebs_volume_type
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_volume_type": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.dataclass
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.dataclass": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.instances
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instances": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.var.env
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.env": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.network_interface_id
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.var.region
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.network_interface_id": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.region": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.encrypted
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.encrypted": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.var.availabilityZone
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.availabilityZone": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ipv6_address_count
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ipv6_address_count": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ipv6_address
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ipv6_address": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ebs_volume_size
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.root_volume_type
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_volume_type": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.owner
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.owner": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_volume_size": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ebs_optimized
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_optimized": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.placement_group
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.placement_group": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ebs_delete_on_termination
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.var.enable_dns_support
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_dns_support": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ebs_iops
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_iops": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.root_volume_size
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.root_volume_size": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.source_dest_check
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.source_dest_check": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.private_ip
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.private_ip": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.cpu_core_count
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.cpu_core_count": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.var.enable_dns_hostnames
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_dns_hostnames": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.var.iam_role_json
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.iam_role_json": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.region": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.var.region
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] vertex "var.env": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.monitoring
2021/04/09 10:10:41 [TRACE] vertex "var.env": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.monitoring": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.env"
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.env": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.env": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.env
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.local.suffix_name": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.local.suffix_name": evaluating
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "local.tags"
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.local.suffix_name
2021/04/09 10:10:41 [TRACE] vertex "local.tags": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:41 [TRACE] vertex "local.tags": evaluating
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "local.ec2_tags"
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: local.tags
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] vertex "var.AWS_ACCESS_KEY": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "local.iam_role_tags"
2021/04/09 10:10:41 [TRACE] vertex "var.AWS_ACCESS_KEY": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "provider.aws"
2021/04/09 10:10:41 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/04/09 10:10:41 [TRACE] vertex "provider.aws": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: provider.aws
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.var.instance_tenancy
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.instance_tenancy": visit complete
2021/04/09 10:10:41 [TRACE] vertex "local.iam_role_tags": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] vertex "local.iam_role_tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: local.iam_role_tags
2021/04/09 10:10:41 [TRACE] vertex "local.ec2_tags": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:41 [TRACE] vertex "local.ec2_tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: local.ec2_tags
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.var.description
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.user_data_base64
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_delete_on_termination": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.var.description
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.description": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ec2_profile
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ec2_profile": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.volume_tags
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.volume_tags": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.key_name": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.associate_public_ip_address
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.associate_public_ip_address": visit complete
2021/04/09 10:10:41 [TRACE] module.ec2_role: eval: *terraform.EvalLocal
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.host_id
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.host_id": visit complete
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.var.enable_classiclink
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.enable_classiclink": visit complete
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.local.suffix_name
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.local.suffix_name": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.var.region
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.region": visit complete
2021/04/09 10:10:41 [TRACE] module.ec2_policy: eval: *terraform.EvalLocal
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.var.suffix
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.suffix": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.local.suffix_name
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.local.suffix_name": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: local.tags
2021/04/09 10:10:41 [TRACE] vertex "local.tags": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.securitygroup.var.tags"
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.var.tags
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.var.iam_policy_json
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.iam_policy_json": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: local.ec2_tags
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: local.iam_role_tags
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.var.description
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_policy.var.description": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.user_data_base64
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.user_data_base64": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.var.cidr_block
2021/04/09 10:10:41 [TRACE] vertex "module.myvpc.var.cidr_block": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.var.region
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.region": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] vertex "local.ec2_tags": visit complete
2021/04/09 10:10:41 [TRACE] vertex "local.iam_role_tags": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.myec2-instance.var.tags"
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.ec2_role.var.tags"
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.tags
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.env
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.env": visit complete
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "local.mysubnet_tags"
2021/04/09 10:10:41 [TRACE] vertex "local.mysubnet_tags": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:41 [TRACE] vertex "local.mysubnet_tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: local.mysubnet_tags
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.tags
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.tags": visit complete
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: local.mysubnet_tags
2021/04/09 10:10:41 [TRACE] vertex "local.mysubnet_tags": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] dag/walk: visiting "module.mysubnet.var.tags"
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.ebs_encrypted
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.ebs_encrypted": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.instance_type
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.var.tags
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.var.tags
2021/04/09 10:10:41 [TRACE] vertex "module.securitygroup.var.tags": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.instance_type": visit complete
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.tenancy
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] vertex "module.myec2-instance.var.tenancy": visit complete
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.var.tags
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:41 [TRACE] vertex "module.mysubnet.var.tags": visit complete
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.tags": evaluating
2021/04/09 10:10:41 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.var.tags
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:41 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.var.tags
2021/04/09 10:10:41 [TRACE] vertex "module.ec2_role.var.tags": visit complete
2021-04-09T10:10:41.855+0530 [DEBUG] plugin: starting plugin: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe args=[C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe]
2021-04-09T10:10:41.857+0530 [DEBUG] plugin: plugin started: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe pid=728
2021-04-09T10:10:41.857+0530 [DEBUG] plugin: waiting for RPC address: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe
2021-04-09T10:10:41.872+0530 [INFO]  plugin.terraform-provider-template_v2.2.0_x4.exe: configuring server automatic mTLS: timestamp=2021-04-09T10:10:41.872+0530
2021-04-09T10:10:41.925+0530 [DEBUG] plugin.terraform-provider-template_v2.2.0_x4.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2021-04-09T10:10:41.925+0530
2021-04-09T10:10:41.925+0530 [DEBUG] plugin: using plugin: version=5
2021/04/09 10:10:41 [TRACE] BuiltinEvalContext: Initialized "template" provider for provider.template
2021/04/09 10:10:41 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:41 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2021/04/09 10:10:41 [TRACE] buildProviderConfig for provider.template: no configuration at all
2021/04/09 10:10:41 [TRACE] GRPCProvider: GetSchema
2021-04-09T10:10:41.925+0530 [INFO]  plugin: configuring client automatic mTLS
2021-04-09T10:10:41.984+0530 [DEBUG] plugin: starting plugin: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe args=[C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe]
2021-04-09T10:10:41.989+0530 [DEBUG] plugin: plugin started: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe pid=10592
2021-04-09T10:10:41.989+0530 [DEBUG] plugin: waiting for RPC address: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe
2021/04/09 10:10:42 [TRACE] GRPCProvider: PrepareProviderConfig
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: provider.template
2021/04/09 10:10:42 [TRACE] vertex "provider.template": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "data.template_file.ec2policy"
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "data.template_file.ec2rolepolicy"
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": evaluating
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": evaluating
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021-04-09T10:10:42.061+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: configuring server automatic mTLS: timestamp=2021-04-09T10:10:42.061+0530
2021-04-09T10:10:42.131+0530 [DEBUG] plugin: using plugin: version=5
2021-04-09T10:10:42.131+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: plugin address: address=127.0.0.1:10001 network=tcp timestamp=2021-04-09T10:10:42.131+0530
2021/04/09 10:10:42 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2021/04/09 10:10:42 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/04/09 10:10:42 [TRACE] GRPCProvider: GetSchema
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.var.json_path"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.json_path": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.json_path"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "provider.template (close)"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.json_path": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.var.json_path
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.json_path": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "provider.template (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.json_path": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.var.json_path
2021/04/09 10:10:42 [TRACE] vertex "provider.template (close)": evaluating
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: provider.template (close)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/09 10:10:42 [TRACE] GRPCProvider: Close
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.var.json_path
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.json_path": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.var.json_path
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.json_path": visit complete
2021-04-09T10:10:42.142+0530 [DEBUG] plugin: plugin process exited: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe pid=728
2021-04-09T10:10:42.142+0530 [DEBUG] plugin: plugin exited
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: provider.template (close)
2021/04/09 10:10:42 [TRACE] vertex "provider.template (close)": visit complete
2021/04/09 10:10:42 [TRACE] GRPCProvider: PrepareProviderConfig
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2021/04/09 10:10:42 [TRACE] vertex "provider.aws": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "data.aws_caller_identity.current"
2021/04/09 10:10:42 [TRACE] vertex "data.aws_caller_identity.current": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "data.aws_caller_identity.current": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: data.aws_caller_identity.current
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.aws_iam_role.create_iam_role
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.data.aws_caller_identity.current"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "data.aws_availability_zones.available"
2021/04/09 10:10:42 [TRACE] vertex "data.aws_availability_zones.available": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "data.aws_availability_zones.available": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: data.aws_availability_zones.available
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": evaluating
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:42 [TRACE] vertex "aws_ebs_volume.createebsvolume": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:42 [TRACE] vertex "aws_ebs_volume.createebsvolume": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: aws_ebs_volume.createebsvolume
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: data.aws_availability_zones.available
2021/04/09 10:10:42 [TRACE] vertex "data.aws_availability_zones.available": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: data.aws_caller_identity.current
2021/04/09 10:10:42 [TRACE] vertex "data.aws_caller_identity.current": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.aws_iam_role.create_iam_role
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.output.uniqe_id"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.uniqe_id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: aws_ebs_volume.createebsvolume
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.uniqe_id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.output.arn"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.output.name"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.arn": evaluating
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.output.id"
2021/04/09 10:10:42 [TRACE] vertex "aws_ebs_volume.createebsvolume": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.output.id"
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.output.id": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myvpc.output.id
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.id": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.name": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.output.id
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.name": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.output.uniqe_id
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.output.arn"
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.output.arn": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myvpc.output.arn
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myvpc: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myvpc.output.id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myvpc.output.id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.output.id
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.output.name"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.name": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.output.description"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.name": evaluating
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.output.arn"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.output.policy"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.policy": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.arn": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.policy": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.output.arn
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.output.path"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.path": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myvpc.output.arn from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myvpc.output.arn in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myvpc.output.arn
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.output.arn": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.output.id
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.output.id
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.id": visit complete
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.arn from state (it is now null)
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.output.policy
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.description": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.output.name
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.output.arn
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_role.output.name
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.output.id": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.path": evaluating
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.arn in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.output.arn
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "aws_internet_gateway.prod-igw"
2021/04/09 10:10:42 [TRACE] vertex "aws_internet_gateway.prod-igw": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.var.vpc_id"
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.vpc_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "output.vpcid"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.arn": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.description": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.vpc_id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.var.vpc_id
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "aws_internet_gateway.prod-igw": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: aws_internet_gateway.prod-igw
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.var.vpc_id
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.vpc_id": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.name from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.name in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.output.name
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.name": visit complete
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_role.output.id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_role.output.id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.output.id
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.id": visit complete
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_role.output.arn from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_role.output.arn in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.output.arn
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.arn": visit complete
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_role.output.name from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_role.output.name in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.output.name
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.name": visit complete
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_role.output.uniqe_id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_role.output.uniqe_id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_role.output.uniqe_id
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.output.uniqe_id": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:42 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: aws_iam_instance_profile.ec2_profile
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.var.vpc_id"
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.vpc_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.vpc_id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.var.vpc_id
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.var.vpc_id
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.vpc_id": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.output.path
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.path from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.path in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.output.path
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.path": visit complete
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.policy from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.policy in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.output.policy
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.policy": visit complete
2021/04/09 10:10:42 [TRACE] vertex "output.vpcid": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "output.vpcid": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: output.vpcid
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021-04-09T10:10:42.538+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:42 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-09T10:10:42.537+0530
2021-04-09T10:10:42.548+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:42 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-09T10:10:42.537+0530
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.ec2_policy.output.description
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: aws_iam_instance_profile.ec2_profile
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: aws_internet_gateway.prod-igw
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing output.vpcid from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for output.vpcid in changeset
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.description from state (it is now null)
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: output.vpcid
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.description in changeset
2021/04/09 10:10:42 [TRACE] vertex "output.vpcid": visit complete
2021/04/09 10:10:42 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.ec2_policy.output.description
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.output.description": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.iam_instance_profile": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": visit complete
2021/04/09 10:10:42 [TRACE] vertex "aws_internet_gateway.prod-igw": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "output.iam_instance_profile"
2021/04/09 10:10:42 [TRACE] vertex "output.iam_instance_profile": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "output.iam_instance_profile": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: output.iam_instance_profile
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.output.description"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "aws_route_table.prod-public-crt"
2021/04/09 10:10:42 [TRACE] vertex "aws_route_table.prod-public-crt": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.description": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "aws_route_table.prod-public-crt": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.description": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: aws_route_table.prod-public-crt
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.output.description
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.output.id"
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.output.id
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.securitygroup.output.id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.securitygroup.output.id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.output.id
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.id": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.vpc_security_group_ids"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.vpc_security_group_ids": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.vpc_security_group_ids": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.vpc_security_group_ids
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.vpc_security_group_ids
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.vpc_security_group_ids": visit complete
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "output.securitygroupid"
2021/04/09 10:10:42 [TRACE] vertex "output.securitygroupid": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "output.securitygroupid": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: output.securitygroupid
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing output.securitygroupid from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for output.securitygroupid in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: output.securitygroupid
2021/04/09 10:10:42 [TRACE] vertex "output.securitygroupid": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing output.iam_instance_profile from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for output.iam_instance_profile in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: output.iam_instance_profile
2021/04/09 10:10:42 [TRACE] vertex "output.iam_instance_profile": visit complete
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.securitygroup.output.description from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.securitygroup.output.description in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.output.description
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.description": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.output.arn"
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.output.arn": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.output.arn
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.mysubnet.output.arn from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.mysubnet.output.arn in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.output.arn
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.output.arn": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.output.name"
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.name": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.name": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.output.name
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.securitygroup.output.name from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.securitygroup.output.name in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.output.name
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.name": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.output.arn"
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.arn": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.securitygroup.output.arn
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.securitygroup: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.securitygroup.output.arn from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.securitygroup.output.arn in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.securitygroup.output.arn
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.output.arn": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.iam_instance_profile": evaluating
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.output.id"
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.iam_instance_profile
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.output.id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.mysubnet.output.id
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.mysubnet: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.iam_instance_profile
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.iam_instance_profile": visit complete
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.mysubnet.output.id from state (it is now null)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.mysubnet.output.id in changeset
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.aws_instance.ec2": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.aws_instance.ec2": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.mysubnet.output.id
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.aws_instance.ec2
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.output.id": visit complete
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.subnet_id"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.subnet_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.subnet_id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.var.subnet_id
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "output.subetid"
2021/04/09 10:10:42 [TRACE] vertex "output.subetid": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "output.subetid": evaluating
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: output.subetid
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing output.subetid from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for output.subetid in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: output.subetid
2021/04/09 10:10:42 [TRACE] vertex "output.subetid": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.var.subnet_id
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.subnet_id": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.aws_instance.ec2
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.aws_instance.ec2": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.placement_group"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.placement_group": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.placement_group": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.placement_group
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.public_dns"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.public_dns": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.public_dns": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.public_dns
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.placement_group from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.placement_group in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.placement_group
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.placement_group": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.private_dns"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.private_dns": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.private_dns": evaluating
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.public_dns from state (it is now null)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.instance_state"
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.public_dns in changeset
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.password_data"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.password_data": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.password_data": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.public_dns
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.public_dns": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.public_ip"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.public_ip": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.primary_network_interface_id"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.public_ip": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.public_ip
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: aws_route_table.prod-public-crt
2021/04/09 10:10:42 [TRACE] vertex "aws_route_table.prod-public-crt": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.private_ip"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.private_ip": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.private_ip": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.private_ip
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.private_ip from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.private_ip in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.private_ip
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.private_ip": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.primary_network_interface_id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.primary_network_interface_id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.primary_network_interface_id
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.primary_network_interface_id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.primary_network_interface_id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.primary_network_interface_id
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.primary_network_interface_id": visit complete
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.password_data
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.password_data from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.password_data in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.password_data
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.password_data": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.availability_zone"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.availability_zone": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.availability_zone": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.availability_zone
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.availability_zone from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.availability_zone in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.availability_zone
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.availability_zone": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.instance_state": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.instance_state": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.instance_state
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.arn"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.arn": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.arn
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.private_dns
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.arn from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.arn in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.arn
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.arn": visit complete
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.private_dns from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.private_dns in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.private_dns
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.private_dns": visit complete
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.public_ip from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.public_ip in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.public_ip
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.public_ip": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.subnet_id"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.subnet_id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.subnet_id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.subnet_id
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.subnet_id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.subnet_id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.subnet_id
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.subnet_id": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.output.id"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: module.myec2-instance.output.id
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] module.myec2-instance: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.id
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing module.myec2-instance.output.instance_state from state (it is now null)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.id": visit complete
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for module.myec2-instance.output.instance_state in changeset
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "output.id"
2021/04/09 10:10:42 [TRACE] vertex "output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:42 [TRACE] vertex "output.id": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: output.id
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: module.myec2-instance.output.instance_state
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "aws_volume_attachment.attachebsvolume"
2021/04/09 10:10:42 [TRACE] vertex "aws_volume_attachment.attachebsvolume": starting visit (*terraform.NodeValidatableResource)
2021/04/09 10:10:42 [TRACE] vertex "aws_volume_attachment.attachebsvolume": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: aws_volume_attachment.attachebsvolume
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.output.instance_state": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Removing output.id from state (it is now null)
2021/04/09 10:10:42 [TRACE] EvalWriteOutput: Saving Create change for output.id in changeset
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: output.id
2021/04/09 10:10:42 [TRACE] vertex "output.id": visit complete
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: aws_volume_attachment.attachebsvolume
2021/04/09 10:10:42 [TRACE] vertex "aws_volume_attachment.attachebsvolume": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "provider.aws (close)"
2021/04/09 10:10:42 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/09 10:10:42 [TRACE] vertex "provider.aws (close)": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/09 10:10:42 [TRACE] GRPCProvider: Close
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/04/09 10:10:42 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/04/09 10:10:42 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2021/04/09 10:10:42 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2021/04/09 10:10:42 [WARN] Not fixing up EachModes for aws_route_table_association.prod-crta-public-subnet-1 because it has no config
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2021/04/09 10:10:42 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-04-09T10:10:42.569+0530 [DEBUG] plugin: plugin process exited: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe pid=10592
2021-04-09T10:10:42.569+0530 [DEBUG] plugin: plugin exited
2021/04/09 10:10:42 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2021/04/09 10:10:42 [TRACE] vertex "provider.aws (close)": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "root"
2021/04/09 10:10:42 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/04/09 10:10:42 [TRACE] vertex "root": visit complete
2021/04/09 10:10:42 [INFO] backend/local: plan calling Refresh
2021/04/09 10:10:42 [INFO] terraform: building graph: GraphTypeRefresh
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: 
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: mysubnet
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: myvpc
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: securitygroup
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: ec2_policy
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: ec2_role
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: myec2-instance
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: 
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: myec2-instance
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: mysubnet
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: myvpc
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: securitygroup
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: ec2_policy
2021/04/09 10:10:42 [TRACE] ConfigTransformer: Starting for path: ec2_role
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.StateTransformer
2021/04/09 10:10:42 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.ec2_profile" (*terraform.NodeRefreshableManagedResource) config from iam.tf:29,1-50
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "aws_volume_attachment.attachebsvolume" (*terraform.NodeRefreshableManagedResource) config from main.tf:20,1-51
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_caller_identity.current" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:10, Column:1, Byte:164}, End:hcl.Pos{Line:10, Column:37, Byte:200}}
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.prod-igw" (*terraform.NodeRefreshableManagedResource) config from main.tf:59,1-43
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.prod-public-crt" (*terraform.NodeRefreshableManagedResource) config from main.tf:64,1-45
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "aws_ebs_volume.createebsvolume" (*terraform.NodeRefreshableManagedResource) config from main.tf:27,1-44
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.ec2policy" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"iam.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:33, Byte:32}}
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.ec2rolepolicy" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"iam.tf", Start:hcl.Pos{Line:15, Column:1, Byte:324}, End:hcl.Pos{Line:15, Column:37, Byte:360}}
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "module.securitygroup.data.aws_caller_identity.securitygroup" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"..\\modules\\securitygroup\\main.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:43, Byte:42}}
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "module.mysubnet.aws_subnet.createsubnet" (*terraform.NodeRefreshableManagedResource) config from ..\modules\subnet\main.tf:1,1-37
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "module.myvpc.aws_vpc.create_vpc" (*terraform.NodeRefreshableManagedResource) config from ..\modules\vpc\main.tf:1,1-32
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "module.ec2_role.aws_iam_role.create_iam_role" (*terraform.NodeRefreshableManagedResource) config from ..\modules\aws-iam-role\main.tf:3,1-42
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "module.ec2_role.data.aws_caller_identity.current" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"..\\modules\\aws-iam-role\\main.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:37, Byte:36}}
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "module.securitygroup.aws_security_group.create_security_group" (*terraform.NodeRefreshableManagedResource) config from ..\modules\securitygroup\main.tf:5,1-54
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "module.ec2_policy.aws_iam_policy.create_iam_policy" (*terraform.NodeRefreshableManagedResource) config from ..\modules\aws-iam-policy\main.tf:1,1-46
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "module.myec2-instance.aws_instance.ec2" (*terraform.NodeRefreshableManagedResource) config from ..\modules\ec2-instance\main.tf:1,1-30
2021/04/09 10:10:42 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.available" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:8, Column:1, Byte:118}, End:hcl.Pos{Line:8, Column:42, Byte:159}}
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.LocalTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/04/09 10:10:42 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from main.tf:1,1-15
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/04/09 10:10:42 [DEBUG] adding implicit provider configuration provider.template, implied first by data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.myvpc.aws_vpc.create_vpc is provided by module.myvpc.provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.myec2-instance.aws_instance.ec2 is provided by module.myec2-instance.provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: aws_volume_attachment.attachebsvolume is provided by provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: aws_ebs_volume.createebsvolume is provided by provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.ec2_role.aws_iam_role.create_iam_role is provided by module.ec2_role.provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.ec2_policy.aws_iam_policy.create_iam_policy is provided by module.ec2_policy.provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: aws_route_table.prod-public-crt is provided by provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: aws_internet_gateway.prod-igw is provided by provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.securitygroup.data.aws_caller_identity.securitygroup is provided by module.securitygroup.provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.mysubnet.aws_subnet.createsubnet is provided by module.mysubnet.provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: data.template_file.ec2policy is provided by provider.template or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: data.template_file.ec2rolepolicy is provided by provider.template or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.ec2_role.data.aws_caller_identity.current is provided by module.ec2_role.provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.securitygroup.aws_security_group.create_security_group is provided by module.securitygroup.provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: data.aws_availability_zones.available is provided by provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: aws_iam_instance_profile.ec2_profile is provided by provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: data.aws_caller_identity.current is provided by provider.aws or inherited equivalent
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.prod-igw
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "aws_internet_gateway.prod-igw" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_file.ec2policy
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "data.template_file.ec2policy" (*terraform.NodeRefreshableDataResource) needs provider.template
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.securitygroup.aws_security_group.create_security_group uses inherited configuration provider.aws
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "module.securitygroup.aws_security_group.create_security_group" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.ec2_role.aws_iam_role.create_iam_role uses inherited configuration provider.aws
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "module.ec2_role.aws_iam_role.create_iam_role" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.securitygroup.data.aws_caller_identity.securitygroup uses inherited configuration provider.aws
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "module.securitygroup.data.aws_caller_identity.securitygroup" (*terraform.NodeRefreshableDataResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.ec2_role.data.aws_caller_identity.current uses inherited configuration provider.aws
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "module.ec2_role.data.aws_caller_identity.current" (*terraform.NodeRefreshableDataResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_instance_profile.ec2_profile
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.ec2_profile" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.myec2-instance.aws_instance.ec2 uses inherited configuration provider.aws
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "module.myec2-instance.aws_instance.ec2" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.mysubnet.aws_subnet.createsubnet uses inherited configuration provider.aws
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "module.mysubnet.aws_subnet.createsubnet" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.template serving data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "data.template_file.ec2rolepolicy" (*terraform.NodeRefreshableDataResource) needs provider.template
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_availability_zones.available
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "data.aws_availability_zones.available" (*terraform.NodeRefreshableDataResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_caller_identity.current
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "data.aws_caller_identity.current" (*terraform.NodeRefreshableDataResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.myvpc.aws_vpc.create_vpc uses inherited configuration provider.aws
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "module.myvpc.aws_vpc.create_vpc" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_volume_attachment.attachebsvolume
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "aws_volume_attachment.attachebsvolume" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_ebs_volume.createebsvolume
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "aws_ebs_volume.createebsvolume" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: module.ec2_policy.aws_iam_policy.create_iam_policy uses inherited configuration provider.aws
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "module.ec2_policy.aws_iam_policy.create_iam_policy" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table.prod-public-crt
2021/04/09 10:10:42 [DEBUG] ProviderTransformer: "aws_route_table.prod-public-crt" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/04/09 10:10:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
local.iam_role_tags - *terraform.NodeLocal
local.mysubnet_tags - *terraform.NodeLocal
local.tags - *terraform.NodeLocal
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
module.ec2_role.output.id - *terraform.NodeApplyableOutput
module.ec2_role.output.name - *terraform.NodeApplyableOutput
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
module.securitygroup.output.description - *terraform.NodeApplyableOutput
module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.securitygroup.output.name - *terraform.NodeApplyableOutput
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
output.iam_instance_profile - *terraform.NodeApplyableOutput
output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to module.myec2-instance.aws_instance.ec2
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_volume_attachment.attachebsvolume
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_ebs_volume.createebsvolume
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to module.ec2_role.aws_iam_role.create_iam_role
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.template
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.prod-public-crt
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.prod-igw
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.available
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.ec2_profile
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_caller_identity.current
2021/04/09 10:10:42 [TRACE] AttachSchemaTransformer: attaching resource schema to module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.securitygroupname" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.policy" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.var.json_path" references: [data.template_file.ec2rolepolicy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.network_interface_id" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.var.enable_classiclink" references: [var.enable_classiclink]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.arn" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.public_ip" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.output.arn" references: [module.mysubnet.aws_subnet.createsubnet]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_iops" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ipv6_address" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.var.instance_tenancy" references: [var.instance_tenancy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.ec2_profile" references: [module.ec2_role.var.json_path module.ec2_role.var.json_path module.ec2_role.var.force_detach_policies module.ec2_role.var.force_detach_policies module.ec2_role.aws_iam_role.create_iam_role module.ec2_role.aws_iam_role.create_iam_role module.ec2_role.local.suffix_name module.ec2_role.local.suffix_name module.ec2_role.output.arn module.ec2_role.var.region module.ec2_role.var.region module.ec2_role.var.suffix module.ec2_role.var.suffix module.ec2_role.var.tags module.ec2_role.var.tags module.ec2_role.var.iam_role_json module.ec2_role.var.iam_role_json module.ec2_role.var.iam_role_name module.ec2_role.var.iam_role_name module.ec2_role.data.aws_caller_identity.current module.ec2_role.data.aws_caller_identity.current module.ec2_role.output.uniqe_id module.ec2_role.var.env module.ec2_role.var.env module.ec2_role.output.id module.ec2_role.output.name module.ec2_role.output.name module.ec2_role.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "data.aws_caller_identity.current" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "local.tags" references: [var.env var.region]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_optimized" references: [var.ebs_optimized]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.vpc_security_group_ids" references: [module.securitygroup.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.var.vpcname" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.env" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_delete_on_termination" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.subnet_name" references: [var.subnet_name]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.cpu_core_count" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.aws_vpc.create_vpc" references: [module.myvpc.var.enable_dns_support module.myvpc.var.tags module.myvpc.var.enable_classiclink module.myvpc.var.enable_dns_hostnames module.myvpc.var.cidr_block module.myvpc.var.instance_tenancy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.local.suffix_name" references: [module.ec2_policy.var.iampolicyname]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.private_ip" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.var.force_detach_policies" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.encrypted" references: [var.root_encrypted]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.associate_public_ip_address" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.aws_instance.ec2" references: [module.myec2-instance.var.instances module.myec2-instance.var.iam_instance_profile module.myec2-instance.var.ebs_optimized module.myec2-instance.var.tags module.myec2-instance.var.volume_tags module.myec2-instance.var.instance_type module.myec2-instance.var.monitoring module.myec2-instance.var.disable_api_termination module.myec2-instance.var.ami module.myec2-instance.var.root_encrypted module.myec2-instance.var.root_delete_on_termination module.myec2-instance.var.root_volume_type module.myec2-instance.var.root_volume_size module.myec2-instance.var.ebs_volume_size module.myec2-instance.var.ebs_delete_on_termination module.myec2-instance.var.ebs_volume_type module.myec2-instance.var.ebs_device_name module.myec2-instance.var.encrypted]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.map_public_ip_on_launch" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.env" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.availability_zone" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.var.cidr_block" references: [var.cidr_block_vpc]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.path" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "aws_volume_attachment.attachebsvolume" references: [module.myec2-instance.output.id module.myec2-instance.output.id aws_ebs_volume.createebsvolume]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.disable_api_termination" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.name" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.description" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.output.id" references: [module.mysubnet.aws_subnet.createsubnet]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "aws_ebs_volume.createebsvolume" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.backends3prefix" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.output.arn" references: [module.myvpc.aws_vpc.create_vpc]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.path" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ec2_profile" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.aws_iam_role.create_iam_role" references: [module.ec2_role.var.suffix module.ec2_role.local.suffix_name module.ec2_role.var.iam_role_name module.ec2_role.var.tags module.ec2_role.var.force_detach_policies module.ec2_role.var.json_path]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.cidr_block" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.enable_classiclink" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.subnet_id" references: [module.mysubnet.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.aws_iam_policy.create_iam_policy" references: [module.ec2_policy.var.path module.ec2_policy.var.description module.ec2_policy.var.json_path]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.instance_tenancy" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "local.mysubnet_tags" references: [var.env var.region]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.local.suffix_name" references: [module.ec2_role.var.iam_role_name]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.disable_api_termination" references: [var.disable_api_termination]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.id" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.output.arn" references: [module.ec2_role.aws_iam_role.create_iam_role]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.source_dest_check" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.tags" references: [local.ec2_tags]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.cpu_threads_per_core" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.root_encrypted" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.ebs_volume_type" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.description" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_snapshot_id" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.availability_zone" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.suffix" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.private_dns" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.user_data_base64" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_device_name" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.password_data" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.public_dns" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.instance_initiated_shutown_behavior" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "provider.template" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.instance_type" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.output.name" references: [module.securitygroup.aws_security_group.create_security_group]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "output.vpcid" references: [module.myvpc.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.var.region" references: [var.region]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.var.vpc_id" references: [module.myvpc.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "aws_route_table.prod-public-crt" references: [module.myvpc.output.id aws_internet_gateway.prod-igw]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "output.iam_instance_profile" references: [aws_iam_instance_profile.ec2_profile]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.var.suffix" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.host_id" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.tenancy" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.iamrolename" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.ebs_optimized" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.root_volume_size" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.output.arn" references: [module.securitygroup.aws_security_group.create_security_group]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.get_password_data" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.ami" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_volume_type" references: [var.root_volume_type]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.dataclass" references: [var.dataclass]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.subnetcidr_block" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.enable_dns_support" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.iampolicyname" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.var.tags" references: [local.iam_role_tags]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ami" references: [var.ami]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.var.map_public_ip_on_launch" references: [var.map_public_ip_on_launch]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.var.tags" references: [local.tags]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "aws_internet_gateway.prod-igw" references: [module.myvpc.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.data.aws_caller_identity.securitygroup" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.arn" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.var.iam_role_json" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.key_name" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.placement_group" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.var.iam_role_name" references: [var.iamrolename]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_encrypted" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.aws_subnet.createsubnet" references: [module.mysubnet.var.cidr_block module.mysubnet.var.tags module.mysubnet.var.vpc_id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.subnet_name" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.enable_dns_hostnames" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.output.name" references: [module.ec2_policy.aws_iam_policy.create_iam_policy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.subnet_id" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.monitoring" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.placement_group" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_volume_type" references: [var.ebs_volume_type]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.iam_instance_profile" references: [aws_iam_instance_profile.ec2_profile]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.var.enable_dns_hostnames" references: [var.enable_dns_hostnames]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.var.vpc_id" references: [module.myvpc.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.AWS_ACCESS_KEY" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "output.securitygroupid" references: [module.securitygroup.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_volume_size" references: [var.ebs_volume_size]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_volume_size" references: [var.root_volume_size]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.instance_type" references: [var.instance_type]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.AWS_SECRET_KEY var.AWS_ACCESS_KEY]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.var.enable_dns_support" references: [var.enable_dns_support]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.root_volume_type" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.AWS_SECRET_KEY" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "output.subetid" references: [module.mysubnet.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ebs_iops" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.ipv6_address_count" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "data.template_file.ec2policy" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "data.template_file.ec2rolepolicy" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "output.id" references: [module.myec2-instance.output.id]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.private_ip" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.var.region" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.var.tags" references: [local.mysubnet_tags]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.var.region" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.data.aws_caller_identity.current" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.ebs_volume_size" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.owner" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.output.description" references: [module.securitygroup.aws_security_group.create_security_group]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.env" references: [var.env]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.aws_security_group.create_security_group" references: [module.securitygroup.var.vpc_id module.securitygroup.var.tags module.securitygroup.var.name]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "local.ec2_tags" references: [var.env var.region]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.primary_network_interface_id" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.output.uniqe_id" references: [module.ec2_role.aws_iam_role.create_iam_role]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.var.env" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_encrypted" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.var.availabilityZone" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.var.description" references: [var.description]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "local.iam_role_tags" references: [var.env var.region]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.output.id" references: [module.securitygroup.aws_security_group.create_security_group]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.id" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.output.id" references: [module.myvpc.aws_vpc.create_vpc]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.instances" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myvpc.var.tags" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.var.cidr_block" references: [var.subnetcidr_block]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.mysubnet.var.region" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.securitygroup.var.name" references: [var.securitygroupname]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.available" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.instance_count" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.root_delete_on_termination" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.owner" references: [var.owner]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.var.volume_tags" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.iampolicyname" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.json_path" references: [data.template_file.ec2policy]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.description" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_policy.var.iam_policy_json" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.backends3_bucket" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.availability_zone" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.cidr_block_vpc" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.encrypted" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.myec2-instance.output.instance_state" references: [module.myec2-instance.aws_instance.ec2]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "var.dataclass" references: []
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.output.id" references: [module.ec2_role.aws_iam_role.create_iam_role]
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "module.ec2_role.output.name" references: [module.ec2_role.aws_iam_role.create_iam_role]
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
  output.iam_instance_profile - *terraform.NodeApplyableOutput
  output.id - *terraform.NodeApplyableOutput
  output.securitygroupid - *terraform.NodeApplyableOutput
  output.subetid - *terraform.NodeApplyableOutput
  output.vpcid - *terraform.NodeApplyableOutput
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
  var.availability_zone - *terraform.NodeRootVariable
  var.backends3_bucket - *terraform.NodeRootVariable
  var.backends3prefix - *terraform.NodeRootVariable
  var.cidr_block - *terraform.NodeRootVariable
  var.encrypted - *terraform.NodeRootVariable
  var.iampolicyname - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.name - *terraform.NodeRootVariable
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
  module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
  module.myvpc.output.id - *terraform.NodeApplyableOutput
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResource
aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResource
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
  provider.template - *terraform.NodeApplyableProvider
local.ec2_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.iam_role_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.mysubnet_tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
local.tags - *terraform.NodeLocal
  var.env - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
module.ec2_policy.var.description - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.iampolicyname - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
module.ec2_policy.var.path - *terraform.NodeApplyableModuleVariable
module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
  module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
  module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.ec2_role.local.suffix_name - *terraform.NodeLocal
  module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
module.ec2_role.output.arn - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.name - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.output.uniqe_id - *terraform.NodeApplyableOutput
  module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResource
module.ec2_role.var.env - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.force_detach_policies - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_json - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.iam_role_name - *terraform.NodeApplyableModuleVariable
  var.iamrolename - *terraform.NodeRootVariable
module.ec2_role.var.json_path - *terraform.NodeApplyableModuleVariable
  data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
module.ec2_role.var.region - *terraform.NodeApplyableModuleVariable
  var.region - *terraform.NodeRootVariable
module.ec2_role.var.suffix - *terraform.NodeApplyableModuleVariable
module.ec2_role.var.tags - *terraform.NodeApplyableModuleVariable
  local.iam_role_tags - *terraform.NodeLocal
module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
  module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.aws_instance.ec2 - *terraform.NodeRefreshableManagedResource
module.myec2-instance.var.ami - *terraform.NodeApplyableModuleVariable
  var.ami - *terraform.NodeRootVariable
module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  var.dataclass - *terraform.NodeRootVariable
module.myec2-instance.var.disable_api_termination - *terraform.NodeApplyableModuleVariable
  var.disable_api_termination - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_device_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_optimized - *terraform.NodeApplyableModuleVariable
  var.ebs_optimized - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ebs_volume_size - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.ebs_volume_type - *terraform.NodeApplyableModuleVariable
  var.ebs_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.encrypted - *terraform.NodeApplyableModuleVariable
  var.root_encrypted - *terraform.NodeRootVariable
module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  var.env - *terraform.NodeRootVariable
module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.iam_instance_profile - *terraform.NodeApplyableModuleVariable
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.instance_type - *terraform.NodeApplyableModuleVariable
  var.instance_type - *terraform.NodeRootVariable
module.myec2-instance.var.instances - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.monitoring - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  var.owner - *terraform.NodeRootVariable
module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_delete_on_termination - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_encrypted - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.root_volume_size - *terraform.NodeApplyableModuleVariable
  var.root_volume_size - *terraform.NodeRootVariable
module.myec2-instance.var.root_volume_type - *terraform.NodeApplyableModuleVariable
  var.root_volume_type - *terraform.NodeRootVariable
module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  var.subnet_name - *terraform.NodeRootVariable
module.myec2-instance.var.tags - *terraform.NodeApplyableModuleVariable
  local.ec2_tags - *terraform.NodeLocal
module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.volume_tags - *terraform.NodeApplyableModuleVariable
module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.output.id - *terraform.NodeApplyableOutput
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.subnetcidr_block - *terraform.NodeRootVariable
module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  var.map_public_ip_on_launch - *terraform.NodeRootVariable
module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
module.mysubnet.var.tags - *terraform.NodeApplyableModuleVariable
  local.mysubnet_tags - *terraform.NodeLocal
module.mysubnet.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
  module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
  provider.aws - *terraform.NodeApplyableProvider
module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.output.id - *terraform.NodeApplyableOutput
  module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResource
module.myvpc.var.cidr_block - *terraform.NodeApplyableModuleVariable
  var.cidr_block_vpc - *terraform.NodeRootVariable
module.myvpc.var.enable_classiclink - *terraform.NodeApplyableModuleVariable
  var.enable_classiclink - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_hostnames - *terraform.NodeApplyableModuleVariable
  var.enable_dns_hostnames - *terraform.NodeRootVariable
module.myvpc.var.enable_dns_support - *terraform.NodeApplyableModuleVariable
  var.enable_dns_support - *terraform.NodeRootVariable
module.myvpc.var.instance_tenancy - *terraform.NodeApplyableModuleVariable
  var.instance_tenancy - *terraform.NodeRootVariable
module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
module.myvpc.var.tags - *terraform.NodeApplyableModuleVariable
module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.id - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  var.description - *terraform.NodeRootVariable
module.securitygroup.var.name - *terraform.NodeApplyableModuleVariable
  var.securitygroupname - *terraform.NodeRootVariable
module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
module.securitygroup.var.tags - *terraform.NodeApplyableModuleVariable
  local.tags - *terraform.NodeLocal
module.securitygroup.var.vpc_id - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.id - *terraform.NodeApplyableOutput
output.iam_instance_profile - *terraform.NodeApplyableOutput
  aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResource
output.id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.id - *terraform.NodeApplyableOutput
output.securitygroupid - *terraform.NodeApplyableOutput
  module.securitygroup.output.id - *terraform.NodeApplyableOutput
output.subetid - *terraform.NodeApplyableOutput
  module.mysubnet.output.id - *terraform.NodeApplyableOutput
output.vpcid - *terraform.NodeApplyableOutput
  module.myvpc.output.id - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
  var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
  var.AWS_SECRET_KEY - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResource
  aws_volume_attachment.attachebsvolume - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.available - *terraform.NodeRefreshableDataResource
  data.aws_caller_identity.current - *terraform.NodeRefreshableDataResource
  module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResource
  module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResource
  module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResource
  module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResource
provider.template - *terraform.NodeApplyableProvider
provider.template (close) - *terraform.graphNodeCloseProvider
  data.template_file.ec2policy - *terraform.NodeRefreshableDataResource
  data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResource
root - terraform.graphNodeRoot
  module.ec2_policy.local.suffix_name - *terraform.NodeLocal
  module.ec2_policy.output.arn - *terraform.NodeApplyableOutput
  module.ec2_policy.output.description - *terraform.NodeApplyableOutput
  module.ec2_policy.output.id - *terraform.NodeApplyableOutput
  module.ec2_policy.output.name - *terraform.NodeApplyableOutput
  module.ec2_policy.output.path - *terraform.NodeApplyableOutput
  module.ec2_policy.output.policy - *terraform.NodeApplyableOutput
  module.ec2_policy.var.env - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.iam_policy_json - *terraform.NodeApplyableModuleVariable
  module.ec2_policy.var.suffix - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.output.arn - *terraform.NodeApplyableOutput
  module.myec2-instance.output.availability_zone - *terraform.NodeApplyableOutput
  module.myec2-instance.output.instance_state - *terraform.NodeApplyableOutput
  module.myec2-instance.output.password_data - *terraform.NodeApplyableOutput
  module.myec2-instance.output.placement_group - *terraform.NodeApplyableOutput
  module.myec2-instance.output.primary_network_interface_id - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.private_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_dns - *terraform.NodeApplyableOutput
  module.myec2-instance.output.public_ip - *terraform.NodeApplyableOutput
  module.myec2-instance.output.subnet_id - *terraform.NodeApplyableOutput
  module.myec2-instance.var.associate_public_ip_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.availability_zone - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_core_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.cpu_threads_per_core - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.dataclass - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_encrypted - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ebs_snapshot_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ec2_profile - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.env - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.get_password_data - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.host_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.instance_initiated_shutown_behavior - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.ipv6_address_count - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.key_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.network_interface_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.owner - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.placement_group - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.private_ip - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.root_iops - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.source_dest_check - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_id - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.subnet_name - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.tenancy - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.user_data_base64 - *terraform.NodeApplyableModuleVariable
  module.myec2-instance.var.vpc_security_group_ids - *terraform.NodeApplyableModuleVariable
  module.mysubnet.output.arn - *terraform.NodeApplyableOutput
  module.mysubnet.var.availabilityZone - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.map_public_ip_on_launch - *terraform.NodeApplyableModuleVariable
  module.mysubnet.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.output.arn - *terraform.NodeApplyableOutput
  module.myvpc.var.region - *terraform.NodeApplyableModuleVariable
  module.myvpc.var.vpcname - *terraform.NodeApplyableModuleVariable
  module.securitygroup.output.arn - *terraform.NodeApplyableOutput
  module.securitygroup.output.description - *terraform.NodeApplyableOutput
  module.securitygroup.output.name - *terraform.NodeApplyableOutput
  module.securitygroup.var.description - *terraform.NodeApplyableModuleVariable
  module.securitygroup.var.region - *terraform.NodeApplyableModuleVariable
  output.iam_instance_profile - *terraform.NodeApplyableOutput
  output.id - *terraform.NodeApplyableOutput
  output.securitygroupid - *terraform.NodeApplyableOutput
  output.subetid - *terraform.NodeApplyableOutput
  output.vpcid - *terraform.NodeApplyableOutput
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provider.template (close) - *terraform.graphNodeCloseProvider
  var.availability_zone - *terraform.NodeRootVariable
  var.backends3_bucket - *terraform.NodeRootVariable
  var.backends3prefix - *terraform.NodeRootVariable
  var.cidr_block - *terraform.NodeRootVariable
  var.encrypted - *terraform.NodeRootVariable
  var.iampolicyname - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.name - *terraform.NodeRootVariable
var.AWS_ACCESS_KEY - *terraform.NodeRootVariable
var.AWS_SECRET_KEY - *terraform.NodeRootVariable
var.ami - *terraform.NodeRootVariable
var.availability_zone - *terraform.NodeRootVariable
var.backends3_bucket - *terraform.NodeRootVariable
var.backends3prefix - *terraform.NodeRootVariable
var.cidr_block - *terraform.NodeRootVariable
var.cidr_block_vpc - *terraform.NodeRootVariable
var.dataclass - *terraform.NodeRootVariable
var.description - *terraform.NodeRootVariable
var.disable_api_termination - *terraform.NodeRootVariable
var.ebs_optimized - *terraform.NodeRootVariable
var.ebs_volume_size - *terraform.NodeRootVariable
var.ebs_volume_type - *terraform.NodeRootVariable
var.enable_classiclink - *terraform.NodeRootVariable
var.enable_dns_hostnames - *terraform.NodeRootVariable
var.enable_dns_support - *terraform.NodeRootVariable
var.encrypted - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.iampolicyname - *terraform.NodeRootVariable
var.iamrolename - *terraform.NodeRootVariable
var.instance_count - *terraform.NodeRootVariable
var.instance_tenancy - *terraform.NodeRootVariable
var.instance_type - *terraform.NodeRootVariable
var.map_public_ip_on_launch - *terraform.NodeRootVariable
var.name - *terraform.NodeRootVariable
var.owner - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.root_encrypted - *terraform.NodeRootVariable
var.root_volume_size - *terraform.NodeRootVariable
var.root_volume_type - *terraform.NodeRootVariable
var.securitygroupname - *terraform.NodeRootVariable
var.subnet_name - *terraform.NodeRootVariable
var.subnetcidr_block - *terraform.NodeRootVariable
------
2021/04/09 10:10:42 [DEBUG] Starting graph walk: walkRefresh
2021/04/09 10:10:42 [TRACE] dag/walk: updating graph
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.availabilityZone"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_delete_on_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.vpc_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.enable_dns_support"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.AWS_SECRET_KEY"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.primary_network_interface_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.output.uniqe_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.output.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.subnet_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.local.suffix_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_iops"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.suffix"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.output.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ec2_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.var.instance_tenancy"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.availability_zone"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.path"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.var.enable_classiclink"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_optimized"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.securitygroupname"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "local.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.subnet_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.ebs_optimized"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.iam_role_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.placement_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.root_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.subnetcidr_block"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.network_interface_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.backends3prefix"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.cidr_block"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.ebs_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.instance_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.ami"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.instances"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.dataclass"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.output.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.monitoring"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.instance_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "output.securitygroupid"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.var.enable_dns_support"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.instance_count"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.iampolicyname"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.cpu_core_count"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.map_public_ip_on_launch"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.private_dns"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "output.subetid"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.availability_zone"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_device_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.key_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.availability_zone"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.user_data_base64"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.dataclass"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.map_public_ip_on_launch"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.var.enable_dns_hostnames"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.volume_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.iam_role_json"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.available"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.password_data"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.get_password_data"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.root_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.iampolicyname"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.instance_initiated_shutown_behavior"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "data.template_file.ec2policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.associate_public_ip_address"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.subnet_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.enable_classiclink"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.disable_api_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.source_dest_check"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_snapshot_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.host_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.public_dns"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.json_path"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.prod-igw"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.owner"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ipv6_address"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.var.cidr_block"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.instance_tenancy"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "provider.template"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.disable_api_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.private_ip"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.suffix"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.output.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.owner"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.subnet_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.placement_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.enable_dns_hostnames"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_iops"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.backends3_bucket"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.cidr_block"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.var.vpcname"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.iamrolename"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "local.ec2_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "provider.template (close)"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.root_encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "aws_route_table.prod-public-crt"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_delete_on_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "root"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.json_path"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ami"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.local.suffix_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.instance_state"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.cpu_threads_per_core"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "output.vpcid"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ebs_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.data.aws_caller_identity.current"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.ebs_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.iam_policy_json"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.vpc_security_group_ids"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "data.aws_caller_identity.current"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_policy.var.path"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "aws_volume_attachment.attachebsvolume"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.tenancy"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.vpc_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.private_ip"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.cidr_block_vpc"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.force_detach_policies"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.securitygroup.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.ipv6_address_count"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.var.root_encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "local.iam_role_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "local.mysubnet_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.ec2_role.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.mysubnet.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "output.iam_instance_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "var.AWS_ACCESS_KEY"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "data.template_file.ec2rolepolicy"
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "module.myec2-instance.output.public_ip"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "local.ec2_tags" waiting on "var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.local.suffix_name" waiting on "module.ec2_role.var.iam_role_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.root_encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.encrypted" waiting on "var.root_encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.mysubnet.var.availabilityZone"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.availability_zone"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.output.id" waiting on "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.var.tags" waiting on "local.mysubnet_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "data.aws_availability_zones.available"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.var.region" waiting on "var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.instances"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.ebs_iops"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.output.uniqe_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.availability_zone"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.var.vpc_id" waiting on "module.myvpc.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.private_ip"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_volume_attachment.attachebsvolume" waiting on "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.securitygroup.var.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_delete_on_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.var.suffix"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.owner" waiting on "var.owner"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.aws_iam_policy.create_iam_policy" waiting on "module.ec2_policy.var.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "output.securitygroupid" waiting on "module.securitygroup.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.root_volume_type" waiting on "var.root_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.owner"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.mysubnet.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.root_volume_size" waiting on "var.root_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.enable_classiclink"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.output.arn" waiting on "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.output.uniqe_id" waiting on "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.aws_iam_policy.create_iam_policy" waiting on "module.ec2_policy.var.path"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "var.encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.availability_zone" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.ipv6_address_count"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.output.arn" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.instance_type" waiting on "var.instance_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.root_delete_on_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.primary_network_interface_id" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.public_ip" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.var.suffix"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.var.json_path"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.tags" waiting on "local.ec2_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.var.json_path" waiting on "data.template_file.ec2policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.aws_iam_policy.create_iam_policy" waiting on "module.ec2_policy.var.json_path"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.securitygroup.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.iam_instance_profile" waiting on "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.placement_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.cidr_block"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.cpu_core_count"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.ebs_optimized" waiting on "var.ebs_optimized"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.var.instance_tenancy" waiting on "var.instance_tenancy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.var.enable_dns_hostnames" waiting on "var.enable_dns_hostnames"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.get_password_data"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.cpu_threads_per_core"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route_table.prod-public-crt"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "local.mysubnet_tags" waiting on "var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.ebs_snapshot_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.var.json_path" waiting on "data.template_file.ec2rolepolicy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "output.vpcid"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "data.aws_availability_zones.available" waiting on "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.aws_iam_policy.create_iam_policy" waiting on "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.data.aws_caller_identity.securitygroup" waiting on "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.vpc_security_group_ids" waiting on "module.securitygroup.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.output.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.env" waiting on "var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.root_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.aws_security_group.create_security_group" waiting on "module.securitygroup.var.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.output.name" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.arn" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_volume_attachment.attachebsvolume"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.var.tags" waiting on "local.iam_role_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.subnet_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "var.availability_zone"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.associate_public_ip_address"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.output.description" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.var.force_detach_policies"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "data.template_file.ec2rolepolicy" waiting on "provider.template"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "output.id" waiting on "module.myec2-instance.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "local.tags" waiting on "var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.subnet_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "local.tags" waiting on "var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.output.description" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.private_ip" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.ebs_volume_type" waiting on "var.ebs_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.host_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "output.iam_instance_profile" waiting on "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.key_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.output.path" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.ebs_volume_size" waiting on "var.ebs_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_route_table.prod-public-crt" waiting on "aws_internet_gateway.prod-igw"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "output.vpcid" waiting on "module.myvpc.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.output.policy" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "var.iampolicyname"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "provider.template (close)"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.data.aws_caller_identity.current" waiting on "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.output.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.data.aws_caller_identity.current"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.var.cidr_block" waiting on "var.subnetcidr_block"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "var.backends3_bucket"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.subnet_id" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "var.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.securitygroup.output.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myvpc.var.vpcname"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.private_dns" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.output.arn" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.network_interface_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_volume_attachment.attachebsvolume" waiting on "module.myec2-instance.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.aws_security_group.create_security_group" waiting on "module.securitygroup.var.vpc_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "output.subetid" waiting on "module.mysubnet.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.mysubnet.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.user_data_base64"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.placement_group" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.output.id" waiting on "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.tenancy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.output.path"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.var.vpc_id" waiting on "module.myvpc.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "data.aws_caller_identity.current" waiting on "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.var.iam_role_name" waiting on "var.iamrolename"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "local.ec2_tags" waiting on "var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.aws_subnet.createsubnet" waiting on "module.mysubnet.var.vpc_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "data.template_file.ec2policy" waiting on "provider.template"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.ec2_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.output.id" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.private_ip"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.disable_api_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "local.iam_role_tags" waiting on "var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.subnet_id" waiting on "module.mysubnet.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.ipv6_address"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.public_dns" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.local.suffix_name" waiting on "module.ec2_policy.var.iampolicyname"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.securitygroup.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.enable_dns_support"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "var.instance_count"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.var.map_public_ip_on_launch" waiting on "var.map_public_ip_on_launch"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.dataclass" waiting on "var.dataclass"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.monitoring"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "var.backends3prefix"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.dataclass"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.var.tags" waiting on "local.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.mysubnet.var.map_public_ip_on_launch"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.ami" waiting on "var.ami"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.volume_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.aws_iam_role.create_iam_role" waiting on "module.ec2_role.local.suffix_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.primary_network_interface_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.ebs_encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.output.id" waiting on "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myvpc.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "data.aws_caller_identity.current"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.subnet_name" waiting on "var.subnet_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.var.name" waiting on "var.securitygroupname"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "output.securitygroupid"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.public_ip"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_device_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.var.enable_classiclink" waiting on "var.enable_classiclink"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.id" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.output.arn" waiting on "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.var.disable_api_termination" waiting on "var.disable_api_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_policy.output.name" waiting on "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.private_dns"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ami"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.aws_subnet.createsubnet" waiting on "module.mysubnet.var.cidr_block"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.output.name" waiting on "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.output.policy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_internet_gateway.prod-igw" waiting on "module.myvpc.output.id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.output.name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.aws_security_group.create_security_group" waiting on "module.securitygroup.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.ec2_role.output.arn" waiting on "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.ec2rolepolicy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "output.iam_instance_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.enable_dns_hostnames"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.aws_vpc.create_vpc" waiting on "module.myvpc.var.instance_tenancy"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.root_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.var.enable_dns_support" waiting on "var.enable_dns_support"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "var.cidr_block"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.instance_state" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "local.iam_role_tags" waiting on "var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.root_iops"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "output.subetid"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_ebs_volume.createebsvolume" waiting on "provider.aws"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "aws_iam_instance_profile.ec2_profile" waiting on "module.ec2_role.var.iam_role_json"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.public_dns"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.vpc_security_group_ids"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.source_dest_check"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.AWS_SECRET_KEY"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.local.suffix_name"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.ebs_optimized"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.instance_initiated_shutown_behavior"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.password_data"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.output.id" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.output.password_data" waiting on "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myvpc.var.cidr_block" waiting on "var.cidr_block_vpc"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.securitygroup.output.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.AWS_ACCESS_KEY"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.mysubnet.aws_subnet.createsubnet" waiting on "module.mysubnet.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.securitygroup.var.description" waiting on "var.description"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.output.instance_state"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.ec2_policy.var.iam_policy_json"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.subnet_id"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "module.myec2-instance.aws_instance.ec2" waiting on "module.myec2-instance.var.instance_type"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myec2-instance.var.placement_group"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "local.mysubnet_tags" waiting on "var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "root" waiting on "module.myvpc.output.arn"
2021/04/09 10:10:42 [TRACE] dag/walk: added edge: "provider.template (close)" waiting on "data.template_file.ec2policy"
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myvpc.aws_vpc.create_vpc", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.tags", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "local.mysubnet_tags", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.ebs_volume_size", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "local.iam_role_tags", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.ebs_optimized", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.subnet_id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.enable_dns_support", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "aws_ebs_volume.createebsvolume", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.mysubnet.output.arn", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.availability_zone", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.primary_network_interface_id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.iam_instance_profile", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.private_ip", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.ebs_volume_type", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.cidr_block", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.var.json_path", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.enable_dns_hostnames", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.arn", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "output.iam_instance_profile", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.mysubnet.aws_subnet.createsubnet", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "data.template_file.ec2policy", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.policy", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.local.suffix_name", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "local.ec2_tags", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "aws_volume_attachment.attachebsvolume", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.root_volume_type", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.output.uniqe_id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.instance_type", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.var.tags", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.mysubnet.var.tags", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myvpc.output.arn", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myvpc.output.id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.aws_iam_role.create_iam_role", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.env", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.output.name", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "output.id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.path", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.mysubnet.var.map_public_ip_on_launch", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.prod-igw", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.instance_state", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.aws_security_group.create_security_group", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "data.template_file.ec2rolepolicy", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "output.subetid", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.placement_group", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.output.id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.subnet_name", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.password_data", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.var.iam_role_name", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.dataclass", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.var.vpc_id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.owner", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.root_volume_size", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.arn", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.instance_tenancy", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "data.aws_availability_zones.available", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.name", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "provider.template (close)", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "aws_iam_instance_profile.ec2_profile", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.aws_iam_policy.create_iam_policy", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.var.description", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.data.aws_caller_identity.current", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.subnet_id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myvpc.var.enable_classiclink", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.output.name", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.var.region", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "output.securitygroupid", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.data.aws_caller_identity.securitygroup", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.output.description", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.output.arn", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.private_dns", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "data.aws_caller_identity.current", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.disable_api_termination", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.output.id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.var.tags", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.output.arn", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.local.suffix_name", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_role.var.json_path", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "local.tags", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "aws_route_table.prod-public-crt", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.mysubnet.var.cidr_block", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.public_dns", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.mysubnet.output.id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.output.public_ip", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "output.vpcid", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.mysubnet.var.vpc_id", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.ami", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.securitygroup.var.name", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.aws_instance.ec2", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.encrypted", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.myec2-instance.var.vpc_security_group_ids", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: dependencies changed for "module.ec2_policy.output.description", sending new deps
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.disable_api_termination"
2021/04/09 10:10:42 [TRACE] vertex "var.disable_api_termination": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.disable_api_termination": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.root_encrypted"
2021/04/09 10:10:42 [TRACE] vertex "var.root_encrypted": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.root_encrypted": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.var.suffix"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.suffix": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.suffix": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.var.suffix
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.var.suffix
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.suffix": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.backends3_bucket"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "provider.template"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.encrypted"
2021/04/09 10:10:42 [TRACE] vertex "provider.template": starting visit (*terraform.NodeApplyableProvider)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.var.vpcname"
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.vpcname": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "provider.template": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.vpcname": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: provider.template
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.iamrolename"
2021/04/09 10:10:42 [TRACE] vertex "var.iamrolename": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.iamrolename": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_encrypted"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_encrypted": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.var.vpcname
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_delete_on_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.network_interface_id"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_delete_on_termination": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.network_interface_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.network_interface_id": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_delete_on_termination": evaluating
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.var.region"
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.root_delete_on_termination
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.cpu_threads_per_core"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.cpu_threads_per_core": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.cidr_block"
2021/04/09 10:10:42 [TRACE] vertex "var.cidr_block": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.var.iam_policy_json"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.iam_policy_json": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.iam_policy_json": evaluating
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.var.description"
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.var.iam_policy_json
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.ebs_volume_size"
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.description": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.description": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.var.description
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.var.iam_policy_json
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.iam_policy_json": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.region": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.region": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.var.region
2021/04/09 10:10:42 [TRACE] vertex "var.ebs_volume_size": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.ebs_volume_size": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_volume_size"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_volume_size": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_volume_size": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ebs_volume_size
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.var.description
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.description": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.network_interface_id
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ebs_volume_size
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_encrypted": evaluating
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.encrypted": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.network_interface_id
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.encrypted": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.encrypted
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.backends3prefix"
2021/04/09 10:10:42 [TRACE] vertex "var.backends3prefix": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.backends3prefix": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.network_interface_id": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.cidr_block": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.cpu_threads_per_core": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.cpu_threads_per_core
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.cpu_threads_per_core
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.cpu_threads_per_core": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_iops"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_iops": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.root_delete_on_termination
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_delete_on_termination": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_iops": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ebs_iops
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ebs_iops
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_iops": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.enable_dns_hostnames"
2021/04/09 10:10:42 [TRACE] vertex "var.enable_dns_hostnames": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.enable_dns_hostnames": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.var.enable_dns_hostnames"
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_dns_hostnames": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_dns_hostnames": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.var.enable_dns_hostnames
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.var.vpcname
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.vpcname": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.iam_role_json"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.iam_role_json": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.iam_role_json": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.var.iam_role_json
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.var.enable_dns_hostnames
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_dns_hostnames": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.var.iam_role_json
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.iam_role_json": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.ebs_volume_type"
2021/04/09 10:10:42 [TRACE] vertex "var.ebs_volume_type": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.ebs_volume_type": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_volume_type"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_volume_type": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_volume_type": evaluating
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.instance_type"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.get_password_data"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.instances"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.dataclass"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.root_volume_size"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.name"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.instance_initiated_shutown_behavior"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.description"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.associate_public_ip_address"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.monitoring"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.host_id"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.var.iampolicyname"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.subnet_name"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.enable_classiclink"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.instance_count"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.disable_api_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.cpu_core_count"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.map_public_ip_on_launch"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.source_dest_check"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_snapshot_id"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.var.tags"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.availability_zone"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_device_name"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.key_name"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.volume_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.owner"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.availability_zone"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ipv6_address"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.instance_tenancy"
2021/04/09 10:10:42 [TRACE] vertex "var.backends3_bucket": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.AWS_SECRET_KEY"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ipv6_address_count"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_encrypted"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_iops"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.var.path"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.suffix"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.var.region"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.tenancy"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ec2_profile"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.AWS_ACCESS_KEY"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.env"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.private_ip"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.var.availabilityZone"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.root_volume_type"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.securitygroupname"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_delete_on_termination"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.cidr_block_vpc"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.force_detach_policies"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.enable_dns_support"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.ami"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.ebs_optimized"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.placement_group"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.placement_group": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.placement_group": evaluating
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.subnetcidr_block"
2021/04/09 10:10:42 [TRACE] vertex "var.subnetcidr_block": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.placement_group
2021/04/09 10:10:42 [TRACE] vertex "var.subnetcidr_block": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.var.cidr_block"
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.cidr_block": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.cidr_block": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.var.cidr_block
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.placement_group
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.placement_group": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ebs_encrypted
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.var.region
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.region": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ebs_encrypted
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_encrypted": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "var.iampolicyname"
2021/04/09 10:10:42 [TRACE] vertex "var.iampolicyname": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.iampolicyname": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.user_data_base64"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.user_data_base64": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.user_data_base64": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.user_data_base64
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ebs_volume_type
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "var.instance_type": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.instance_type": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.instance_type"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instance_type": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instance_type": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.instance_type
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.get_password_data": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.get_password_data": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.get_password_data
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.instance_type
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instance_type": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.dataclass": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.dataclass": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.get_password_data
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.dataclass"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.get_password_data": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.dataclass": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.name": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.name": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.description": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.description": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.associate_public_ip_address": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.var.description"
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.description": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.description": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.associate_public_ip_address": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.var.description
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.associate_public_ip_address
2021-04-09T10:10:42.597+0530 [INFO]  plugin: configuring client automatic mTLS
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.associate_public_ip_address
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.associate_public_ip_address": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.var.description
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.description": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.env": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.env": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.var.env
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.host_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.var.env
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.host_id": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.env": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.iampolicyname": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.host_id
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.iampolicyname": evaluating
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.var.iampolicyname
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.env": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.instance_count": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.instance_count": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.disable_api_termination": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.env": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.disable_api_termination": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.var.env
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.disable_api_termination
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.var.env
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.env": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.disable_api_termination
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.disable_api_termination": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.source_dest_check": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.source_dest_check": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.source_dest_check
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.region": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.source_dest_check
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.region": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.source_dest_check": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.var.region
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.tags": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_snapshot_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.var.tags
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.availability_zone": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.availability_zone": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.availability_zone
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.var.tags
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.tags": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.var.region
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_snapshot_id": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.region": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ebs_snapshot_id
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ebs_snapshot_id
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_snapshot_id": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.availability_zone
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.availability_zone": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.volume_tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.volume_tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.volume_tags
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.volume_tags
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.volume_tags": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.owner": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.owner": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.owner"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.owner": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.owner": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.owner
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "var.availability_zone": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.availability_zone": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ipv6_address": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.instance_tenancy": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.instance_tenancy": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.var.instance_tenancy"
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.instance_tenancy": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.instance_tenancy": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.var.instance_tenancy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "var.backends3_bucket": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.AWS_SECRET_KEY": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.AWS_SECRET_KEY": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.var.instance_tenancy
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ipv6_address_count": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_encrypted": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_iops": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.path": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.suffix": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.region": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.tenancy": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ec2_profile": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.AWS_ACCESS_KEY": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.env": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.private_ip": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.availabilityZone": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.root_volume_type": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.securitygroupname": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_delete_on_termination": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.cidr_block_vpc": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.force_detach_policies": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.enable_dns_support": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.ami": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.ebs_optimized": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.iam_role_name"
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_volume_size": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.user_data_base64
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instances": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.dataclass": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instance_initiated_shutown_behavior": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.root_volume_size": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.monitoring": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.encrypted": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] vertex "var.enable_classiclink": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.subnet_name": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.cpu_core_count": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.map_public_ip_on_launch": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_device_name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.key_name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.owner
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.owner": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ipv6_address": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ipv6_address
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ipv6_address
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ipv6_address": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.region": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.region"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.region": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.region": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.var.region
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_encrypted": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.root_encrypted
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.var.region
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.region": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.root_encrypted
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_encrypted": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.path": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.var.path
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.suffix": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.var.path
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.path": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.var.suffix
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.tenancy": evaluating
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.tenancy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ec2_profile": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ec2_profile
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "var.env": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "local.mysubnet_tags"
2021/04/09 10:10:42 [TRACE] vertex "local.mysubnet_tags": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "local.tags"
2021/04/09 10:10:42 [TRACE] vertex "local.tags": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:42 [TRACE] vertex "local.tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: local.tags
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "local.ec2_tags"
2021/04/09 10:10:42 [TRACE] vertex "local.ec2_tags": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:42 [TRACE] vertex "local.ec2_tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: local.ec2_tags
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.env"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.env": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.env": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.env
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: local.tags
2021/04/09 10:10:42 [TRACE] vertex "local.tags": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "local.iam_role_tags"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.var.tags"
2021/04/09 10:10:42 [TRACE] vertex "local.iam_role_tags": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/09 10:10:42 [TRACE] vertex "local.iam_role_tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: local.iam_role_tags
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ec2_profile
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ec2_profile": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: local.ec2_tags
2021/04/09 10:10:42 [TRACE] vertex "local.ec2_tags": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.tags"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.tags
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.env
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.env": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: local.iam_role_tags
2021/04/09 10:10:42 [TRACE] vertex "local.iam_role_tags": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.tags"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.var.tags
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "local.mysubnet_tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: local.mysubnet_tags
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.var.tags
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.tags": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: local.mysubnet_tags
2021/04/09 10:10:42 [TRACE] vertex "local.mysubnet_tags": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.availabilityZone": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.var.availabilityZone
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.var.tags"
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "var.root_volume_type": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.securitygroupname": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_delete_on_termination": evaluating
2021/04/09 10:10:42 [TRACE] vertex "var.cidr_block_vpc": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.force_detach_policies": evaluating
2021/04/09 10:10:42 [TRACE] vertex "var.enable_dns_support": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.ami": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.ebs_optimized": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.iam_role_name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.user_data_base64": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ebs_volume_type
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instances": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.dataclass
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instance_initiated_shutown_behavior": evaluating
2021/04/09 10:10:42 [TRACE] vertex "var.root_volume_size": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.monitoring": evaluating
2021/04/09 10:10:42 [TRACE] vertex "var.encrypted": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] vertex "var.enable_classiclink": visit complete
2021/04/09 10:10:42 [TRACE] vertex "var.subnet_name": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.cpu_core_count": evaluating
2021/04/09 10:10:42 [TRACE] vertex "var.map_public_ip_on_launch": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_device_name": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.key_name": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ipv6_address_count": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_iops": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.instance_tenancy": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.region": evaluating
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] vertex "var.AWS_ACCESS_KEY": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.private_ip": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.tags": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.tags
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.tags": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.var.availabilityZone
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.availabilityZone": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.var.tags
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_volume_type"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_volume_type": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.var.tags
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.tags": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_volume_type": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.root_volume_type
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.securitygroup.var.name"
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.var.cidr_block"
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.root_volume_type
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.cidr_block": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.var.force_detach_policies
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.cidr_block": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.name": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.var.cidr_block
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_volume_type": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.var.name
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.var.enable_dns_support"
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_dns_support": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_dns_support": evaluating
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.iam_role_name": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.var.iam_role_name
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.var.enable_dns_support
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.encrypted
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.var.cidr_block
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.var.name
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.name": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.var.iam_role_name
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.iam_role_name": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.local.suffix_name"
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.cidr_block": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_volume_type": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.local.suffix_name": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.var.enable_dns_support
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_dns_support": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.local.suffix_name": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.local.suffix_name
2021/04/09 10:10:42 [TRACE] module.ec2_role: eval: *terraform.EvalLocal
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.encrypted": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.instances
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.local.suffix_name
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.local.suffix_name": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.instances
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instances": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.instance_initiated_shutown_behavior
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.root_volume_size"
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.instance_initiated_shutown_behavior
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_volume_size": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.instance_initiated_shutown_behavior": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.monitoring
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_volume_size": evaluating
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.root_volume_size
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.host_id
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.host_id": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myvpc.var.enable_classiclink"
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_classiclink": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_classiclink": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.var.enable_classiclink
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.root_volume_size
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_volume_size": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.var.enable_classiclink
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.enable_classiclink": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.subnet_name"
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.subnet_name": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.subnet_name": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.subnet_name
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.cpu_core_count
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.subnet_name
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.subnet_name": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.mysubnet.var.map_public_ip_on_launch"
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.map_public_ip_on_launch": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.map_public_ip_on_launch": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.var.map_public_ip_on_launch
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.cpu_core_count
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.cpu_core_count": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.key_name
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.var.map_public_ip_on_launch
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.map_public_ip_on_launch": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.key_name
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.key_name": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ipv6_address_count
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ipv6_address_count
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ipv6_address_count": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.root_iops
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.root_iops
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.root_iops": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.var.region
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.var.region
2021/04/09 10:10:42 [TRACE] vertex "module.mysubnet.var.region": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.tenancy
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.tenancy": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.var.suffix
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.suffix": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "provider.aws"
2021/04/09 10:10:42 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/04/09 10:10:42 [TRACE] vertex "provider.aws": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: provider.aws
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.private_ip
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.private_ip
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.private_ip": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.tags": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.var.tags
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.var.tags
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ebs_delete_on_termination
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ebs_optimized"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.myec2-instance.var.ami"
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ebs_device_name
2021/04/09 10:10:42 [TRACE] vertex "module.securitygroup.var.tags": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ebs_delete_on_termination
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_delete_on_termination": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.var.cidr_block
2021/04/09 10:10:42 [TRACE] vertex "module.myvpc.var.cidr_block": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.var.force_detach_policies
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.force_detach_policies": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_optimized": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_optimized": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ebs_optimized
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ebs_optimized
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_optimized": visit complete
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ami": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ami": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.ami
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ami
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ami": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.dataclass
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.dataclass": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.var.iampolicyname
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.iampolicyname": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.local.suffix_name"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.local.suffix_name": starting visit (*terraform.NodeLocal)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.local.suffix_name": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.local.suffix_name
2021/04/09 10:10:42 [TRACE] module.ec2_policy: eval: *terraform.EvalLocal
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.local.suffix_name
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.local.suffix_name": visit complete
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.monitoring
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.monitoring": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.ebs_device_name
2021/04/09 10:10:42 [TRACE] vertex "module.myec2-instance.var.ebs_device_name": visit complete
2021-04-09T10:10:42.649+0530 [DEBUG] plugin: starting plugin: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe args=[C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe]
2021-04-09T10:10:42.650+0530 [DEBUG] plugin: plugin started: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe pid=7708
2021-04-09T10:10:42.650+0530 [DEBUG] plugin: waiting for RPC address: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe
2021-04-09T10:10:42.664+0530 [INFO]  plugin.terraform-provider-template_v2.2.0_x4.exe: configuring server automatic mTLS: timestamp=2021-04-09T10:10:42.664+0530
2021-04-09T10:10:42.714+0530 [DEBUG] plugin: using plugin: version=5
2021-04-09T10:10:42.714+0530 [DEBUG] plugin.terraform-provider-template_v2.2.0_x4.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2021-04-09T10:10:42.714+0530
2021/04/09 10:10:42 [TRACE] BuiltinEvalContext: Initialized "template" provider for provider.template
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/04/09 10:10:42 [TRACE] buildProviderConfig for provider.template: no configuration at all
2021/04/09 10:10:42 [TRACE] GRPCProvider: GetSchema
2021-04-09T10:10:42.715+0530 [INFO]  plugin: configuring client automatic mTLS
2021-04-09T10:10:42.778+0530 [DEBUG] plugin: starting plugin: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe args=[C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe]
2021-04-09T10:10:42.790+0530 [DEBUG] plugin: plugin started: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe pid=11252
2021-04-09T10:10:42.790+0530 [DEBUG] plugin: waiting for RPC address: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe
2021-04-09T10:10:42.851+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: configuring server automatic mTLS: timestamp=2021-04-09T10:10:42.850+0530
2021-04-09T10:10:42.921+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: plugin address: address=127.0.0.1:10001 network=tcp timestamp=2021-04-09T10:10:42.921+0530
2021-04-09T10:10:42.926+0530 [DEBUG] plugin: using plugin: version=5
2021/04/09 10:10:42 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/04/09 10:10:42 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/04/09 10:10:42 [TRACE] GRPCProvider: GetSchema
2021/04/09 10:10:42 [TRACE] GRPCProvider: Configure
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: provider.template
2021/04/09 10:10:42 [TRACE] vertex "provider.template": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "data.template_file.ec2policy"
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": starting visit (*terraform.NodeRefreshableDataResource)
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": expanding dynamic subgraph
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
data.template_file.ec2policy - *terraform.NodeRefreshableDataResourceInstance
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:42 [DEBUG] Resource state not found for node "data.template_file.ec2policy", instance data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "data.template_file.ec2policy" references: []
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": entering dynamic subgraph
2021/04/09 10:10:42 [TRACE] dag/walk: updating graph
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "data.template_file.ec2policy"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "data.template_file.ec2policy"
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:42 [TRACE] EvalWriteState: removing state object for data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalReadData
2021/04/09 10:10:42 [TRACE] EvalReadData: working on data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] Re-validating config for data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "data.template_file.ec2rolepolicy"
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": starting visit (*terraform.NodeRefreshableDataResource)
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": expanding dynamic subgraph
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
data.template_file.ec2rolepolicy - *terraform.NodeRefreshableDataResourceInstance
------
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:42 [DEBUG] ReferenceTransformer: "data.template_file.ec2rolepolicy" references: []
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:42 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:42 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": entering dynamic subgraph
2021/04/09 10:10:42 [TRACE] dag/walk: updating graph
2021/04/09 10:10:42 [TRACE] dag/walk: added new vertex: "data.template_file.ec2rolepolicy"
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "data.template_file.ec2rolepolicy"
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:42 [TRACE] EvalWriteState: removing state object for data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/09 10:10:42 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalReadData
2021/04/09 10:10:42 [TRACE] EvalReadData: working on data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] Re-validating config for data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:42 [TRACE] EvalReadData: data.template_file.ec2rolepolicy configuration is complete, so reading from provider
2021/04/09 10:10:42 [TRACE] GRPCProvider: ReadDataSource
2021/04/09 10:10:42 [TRACE] EvalReadData: data.template_file.ec2policy configuration is complete, so reading from provider
2021/04/09 10:10:42 [TRACE] GRPCProvider: ReadDataSource
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:42 [TRACE] EvalWriteState: writing current state object for data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.ec2rolepolicy
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": visit complete
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": dynamic subgraph completed successfully
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2rolepolicy": visit complete
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:42 [TRACE] EvalWriteState: writing current state object for data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: data.template_file.ec2policy
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": visit complete
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": dynamic subgraph completed successfully
2021/04/09 10:10:42 [TRACE] vertex "data.template_file.ec2policy": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_policy.var.json_path"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.json_path": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.json_path": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.var.json_path
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] GetResourceInstance: data.template_file.ec2policy is a single instance
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.var.json_path
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_policy.var.json_path": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "module.ec2_role.var.json_path"
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.json_path": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.json_path": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.var.json_path
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:42 [TRACE] GetResourceInstance: data.template_file.ec2rolepolicy is a single instance
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.var.json_path
2021/04/09 10:10:42 [TRACE] vertex "module.ec2_role.var.json_path": visit complete
2021/04/09 10:10:42 [TRACE] dag/walk: visiting "provider.template (close)"
2021/04/09 10:10:42 [TRACE] vertex "provider.template (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/09 10:10:42 [TRACE] vertex "provider.template (close)": evaluating
2021/04/09 10:10:42 [TRACE] [walkRefresh] Entering eval tree: provider.template (close)
2021/04/09 10:10:42 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/09 10:10:42 [TRACE] GRPCProvider: Close
2021-04-09T10:10:42.953+0530 [DEBUG] plugin: plugin process exited: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-template_v2.2.0_x4.exe pid=7708
2021-04-09T10:10:42.953+0530 [DEBUG] plugin: plugin exited
2021/04/09 10:10:42 [TRACE] [walkRefresh] Exiting eval tree: provider.template (close)
2021/04/09 10:10:42 [TRACE] vertex "provider.template (close)": visit complete
2021/04/09 10:10:43 [TRACE] GRPCProvider: Configure
2021-04-09T10:10:43.171+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:43 [INFO] AWS Auth provider used: "StaticProvider": timestamp=2021-04-09T10:10:43.171+0530
2021-04-09T10:10:43.173+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:43 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-04-09T10:10:43.172+0530
2021-04-09T10:10:45.244+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:45 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-04-09T10:10:45.244+0530
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "aws_route_table.prod-public-crt" is waiting for "aws_internet_gateway.prod-igw"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "output.vpcid" is waiting for "module.myvpc.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_policy.output.policy" is waiting for "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.aws_instance.ec2" is waiting for "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_policy.aws_iam_policy.create_iam_policy" is waiting for "provider.aws"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.var.subnet_id" is waiting for "module.mysubnet.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_role.data.aws_caller_identity.current" is waiting for "provider.aws"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.var.vpc_security_group_ids" is waiting for "module.securitygroup.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.mysubnet.aws_subnet.createsubnet" is waiting for "module.mysubnet.var.vpc_id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "data.aws_availability_zones.available" is waiting for "provider.aws"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "output.iam_instance_profile" is waiting for "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_policy.output.arn" is waiting for "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.arn" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "output.securitygroupid" is waiting for "module.securitygroup.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.private_ip" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.securitygroup.var.vpc_id" is waiting for "module.myvpc.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.var.iam_instance_profile" is waiting for "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.password_data" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.primary_network_interface_id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_role.output.id" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_policy.output.name" is waiting for "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.placement_group" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "output.subetid" is waiting for "module.mysubnet.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.securitygroup.aws_security_group.create_security_group" is waiting for "module.securitygroup.var.vpc_id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.mysubnet.output.arn" is waiting for "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.instance_state" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "aws_ebs_volume.createebsvolume" is waiting for "provider.aws"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "aws_internet_gateway.prod-igw" is waiting for "module.myvpc.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_policy.output.path" is waiting for "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.subnet_id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "output.id" is waiting for "module.myec2-instance.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.public_ip" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_role.output.uniqe_id" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myvpc.output.arn" is waiting for "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.securitygroup.output.name" is waiting for "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myvpc.output.id" is waiting for "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "root" is waiting for "output.vpcid"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.private_dns" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.mysubnet.var.vpc_id" is waiting for "module.myvpc.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_role.output.arn" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.securitygroup.output.description" is waiting for "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_policy.output.description" is waiting for "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.public_dns" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.securitygroup.output.arn" is waiting for "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "data.aws_caller_identity.current" is waiting for "provider.aws"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myec2-instance.output.availability_zone" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.mysubnet.output.id" is waiting for "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "aws_volume_attachment.attachebsvolume" is waiting for "module.myec2-instance.output.id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.securitygroup.data.aws_caller_identity.securitygroup" is waiting for "provider.aws"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_policy.output.id" is waiting for "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.securitygroup.output.id" is waiting for "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_role.output.name" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "aws_iam_instance_profile.ec2_profile" is waiting for "module.ec2_role.output.uniqe_id"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.myvpc.aws_vpc.create_vpc" is waiting for "provider.aws"
2021/04/09 10:10:47 [TRACE] dag/walk: vertex "module.ec2_role.aws_iam_role.create_iam_role" is waiting for "provider.aws"
2021/04/09 10:10:50 [TRACE] [walkRefresh] Exiting eval tree: provider.aws
2021/04/09 10:10:50 [TRACE] vertex "provider.aws": visit complete
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": expanding dynamic subgraph
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
module.ec2_policy.aws_iam_policy.create_iam_policy - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "data.aws_caller_identity.current"
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:50 [TRACE] vertex "data.aws_caller_identity.current": starting visit (*terraform.NodeRefreshableDataResource)
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:50 [TRACE] vertex "data.aws_caller_identity.current": expanding dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "data.aws_availability_zones.available"
2021/04/09 10:10:50 [TRACE] vertex "data.aws_availability_zones.available": starting visit (*terraform.NodeRefreshableDataResource)
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:50 [TRACE] vertex "data.aws_availability_zones.available": expanding dynamic subgraph
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:50 [TRACE] vertex "aws_ebs_volume.createebsvolume": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": expanding dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.ec2_role.data.aws_caller_identity.current"
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": starting visit (*terraform.NodeRefreshableDataResource)
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:50 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:50 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": expanding dynamic subgraph
2021/04/09 10:10:50 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": starting visit (*terraform.NodeRefreshableDataResource)
2021/04/09 10:10:50 [TRACE] vertex "aws_ebs_volume.createebsvolume": expanding dynamic subgraph
2021/04/09 10:10:50 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": expanding dynamic subgraph
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": expanding dynamic subgraph
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:50 [DEBUG] Resource instance state not found for node "module.ec2_policy.aws_iam_policy.create_iam_policy", instance module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:50 [DEBUG] ReferenceTransformer: "module.ec2_policy.aws_iam_policy.create_iam_policy" references: []
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": entering dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: updating graph
2021/04/09 10:10:50 [TRACE] dag/walk: added new vertex: "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:50 [TRACE] NodeRefreshableManagedResourceInstance: module.ec2_policy.aws_iam_policy.create_iam_policy has no existing state to refresh
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": evaluating
2021/04/09 10:10:50 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:50 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:50 [TRACE] module.ec2_policy: eval: *terraform.EvalGetProvider
2021/04/09 10:10:50 [TRACE] module.ec2_policy: eval: *terraform.EvalReadState
2021/04/09 10:10:50 [TRACE] EvalReadState: reading state for module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:50 [TRACE] EvalReadState: no state present for module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:50 [TRACE] module.ec2_policy: eval: *terraform.EvalDiff
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
data.aws_caller_identity.current - *terraform.NodeRefreshableDataResourceInstance
------
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:50 [DEBUG] Resource state not found for node "data.aws_caller_identity.current", instance data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:50 [TRACE] Re-validating config for "module.ec2_policy.aws_iam_policy.create_iam_policy"
2021/04/09 10:10:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:50 [DEBUG] ReferenceTransformer: "data.aws_caller_identity.current" references: []
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:50 [TRACE] vertex "data.aws_caller_identity.current": entering dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: updating graph
2021/04/09 10:10:50 [TRACE] dag/walk: added new vertex: "data.aws_caller_identity.current"
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "data.aws_caller_identity.current"
2021/04/09 10:10:50 [TRACE] vertex "data.aws_caller_identity.current": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/04/09 10:10:50 [TRACE] vertex "data.aws_caller_identity.current": evaluating
2021/04/09 10:10:50 [TRACE] [walkRefresh] Entering eval tree: data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
data.aws_availability_zones.available - *terraform.NodeRefreshableDataResourceInstance
------
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:50 [DEBUG] Resource state not found for node "data.aws_availability_zones.available", instance data.aws_availability_zones.available
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:50 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.available" references: []
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:50 [TRACE] vertex "data.aws_availability_zones.available": entering dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: updating graph
2021/04/09 10:10:50 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.available"
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "data.aws_availability_zones.available"
2021/04/09 10:10:50 [TRACE] vertex "data.aws_availability_zones.available": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/04/09 10:10:50 [TRACE] vertex "data.aws_availability_zones.available": evaluating
2021/04/09 10:10:50 [TRACE] [walkRefresh] Entering eval tree: data.aws_availability_zones.available
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:50 [TRACE] EvalWriteState: removing state object for data.aws_availability_zones.available
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/09 10:10:50 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalReadData
2021/04/09 10:10:50 [TRACE] EvalReadData: working on data.aws_availability_zones.available
2021/04/09 10:10:50 [TRACE] Re-validating config for data.aws_availability_zones.available
2021/04/09 10:10:50 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:50 [TRACE] EvalWriteState: removing state object for data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/09 10:10:50 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalReadData
2021/04/09 10:10:50 [TRACE] EvalReadData: working on data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] Re-validating config for data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
module.ec2_role.aws_iam_role.create_iam_role - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:50 [DEBUG] ReferenceTransformer: "module.ec2_role.aws_iam_role.create_iam_role" references: []
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": entering dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: updating graph
2021/04/09 10:10:50 [TRACE] dag/walk: added new vertex: "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:50 [TRACE] NodeRefreshableManagedResourceInstance: module.ec2_role.aws_iam_role.create_iam_role will be refreshed
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": evaluating
2021/04/09 10:10:50 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.aws_iam_role.create_iam_role
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalGetProvider
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalReadState
2021/04/09 10:10:50 [TRACE] EvalReadState: reading state for module.ec2_role.aws_iam_role.create_iam_role
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
module.myvpc.aws_vpc.create_vpc - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:50 [DEBUG] Resource instance state not found for node "module.myvpc.aws_vpc.create_vpc", instance module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:50 [DEBUG] ReferenceTransformer: "module.myvpc.aws_vpc.create_vpc" references: []
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:50 [TRACE] EvalReadData: data.aws_caller_identity.current configuration is complete, so reading from provider
2021/04/09 10:10:50 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": entering dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: updating graph
2021/04/09 10:10:50 [TRACE] dag/walk: added new vertex: "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:50 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:50 [TRACE] GRPCProvider: ReadDataSource
2021/04/09 10:10:50 [TRACE] NodeRefreshableManagedResourceInstance: module.myvpc.aws_vpc.create_vpc has no existing state to refresh
2021/04/09 10:10:50 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": evaluating
2021/04/09 10:10:50 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:50 [TRACE] module.myvpc: eval: *terraform.EvalSequence
2021/04/09 10:10:50 [TRACE] module.myvpc: eval: *terraform.EvalGetProvider
2021/04/09 10:10:50 [TRACE] module.myvpc: eval: *terraform.EvalReadState
2021/04/09 10:10:50 [TRACE] EvalReadState: reading state for module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:50 [TRACE] EvalReadState: no state present for module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:50 [TRACE] module.myvpc: eval: *terraform.EvalDiff
2021/04/09 10:10:50 [TRACE] UpgradeResourceState: schema version of module.ec2_role.aws_iam_role.create_iam_role is still 0; calling provider "aws" for any other minor fixups
2021/04/09 10:10:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/09 10:10:50 [TRACE] EvalReadData: data.aws_availability_zones.available configuration is complete, so reading from provider
2021/04/09 10:10:50 [TRACE] GRPCProvider: ReadDataSource
2021/04/09 10:10:50 [TRACE] GRPCProvider: PlanResourceChange
2021/04/09 10:10:50 [TRACE] Re-validating config for "module.myvpc.aws_vpc.create_vpc"
2021/04/09 10:10:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_ebs_volume.createebsvolume - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:50 [DEBUG] Resource instance state not found for node "aws_ebs_volume.createebsvolume", instance aws_ebs_volume.createebsvolume
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:50 [DEBUG] ReferenceTransformer: "aws_ebs_volume.createebsvolume" references: []
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:50 [TRACE] vertex "aws_ebs_volume.createebsvolume": entering dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: updating graph
2021/04/09 10:10:50 [TRACE] dag/walk: added new vertex: "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:50 [TRACE] vertex "aws_ebs_volume.createebsvolume": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:50 [TRACE] NodeRefreshableManagedResourceInstance: aws_ebs_volume.createebsvolume has no existing state to refresh
2021/04/09 10:10:50 [TRACE] vertex "aws_ebs_volume.createebsvolume": evaluating
2021/04/09 10:10:50 [TRACE] [walkRefresh] Entering eval tree: aws_ebs_volume.createebsvolume
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/09 10:10:50 [TRACE] EvalReadState: reading state for aws_ebs_volume.createebsvolume
2021/04/09 10:10:50 [TRACE] EvalReadState: no state present for aws_ebs_volume.createebsvolume
2021/04/09 10:10:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/09 10:10:50 [TRACE] Re-validating config for "aws_ebs_volume.createebsvolume"
2021/04/09 10:10:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
module.securitygroup.data.aws_caller_identity.securitygroup - *terraform.NodeRefreshableDataResourceInstance
------
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:50 [DEBUG] Resource state not found for node "module.securitygroup.data.aws_caller_identity.securitygroup", instance module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:50 [DEBUG] ReferenceTransformer: "module.securitygroup.data.aws_caller_identity.securitygroup" references: []
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:50 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": entering dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: updating graph
2021/04/09 10:10:50 [TRACE] dag/walk: added new vertex: "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.securitygroup.data.aws_caller_identity.securitygroup"
2021/04/09 10:10:50 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/04/09 10:10:50 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": evaluating
2021/04/09 10:10:50 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:50 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:50 [TRACE] module.securitygroup: eval: *terraform.EvalGetProvider
2021/04/09 10:10:50 [TRACE] module.securitygroup: eval: *terraform.EvalWriteState
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
module.ec2_role.data.aws_caller_identity.current - *terraform.NodeRefreshableDataResourceInstance
------
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:50 [DEBUG] ReferenceTransformer: "module.ec2_role.data.aws_caller_identity.current" references: []
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": entering dynamic subgraph
2021/04/09 10:10:50 [TRACE] dag/walk: updating graph
2021/04/09 10:10:50 [TRACE] dag/walk: added new vertex: "module.ec2_role.data.aws_caller_identity.current"
2021/04/09 10:10:50 [TRACE] dag/walk: visiting "module.ec2_role.data.aws_caller_identity.current"
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/04/09 10:10:50 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": evaluating
2021/04/09 10:10:50 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalGetProvider
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalWriteState
2021/04/09 10:10:50 [TRACE] EvalWriteState: removing state object for module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalIf
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: terraform.EvalNoop
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalReadData
2021/04/09 10:10:50 [TRACE] EvalReadData: working on module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] Re-validating config for module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:50 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021-04-09T10:10:50.992+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:50 [DEBUG] Reading Caller Identity: timestamp=2021-04-09T10:10:50.976+0530
2021-04-09T10:10:50.994+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:50 [DEBUG] Reading Availability Zones.: timestamp=2021-04-09T10:10:50.991+0530
2021-04-09T10:10:50.994+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:50 [DEBUG] Reading Availability Zones: {

}: timestamp=2021-04-09T10:10:50.992+0530
2021/04/09 10:10:50 [TRACE] EvalWriteState: removing state object for module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:50 [TRACE] module.securitygroup: eval: *terraform.EvalIf
2021/04/09 10:10:50 [TRACE] module.securitygroup: eval: terraform.EvalNoop
2021/04/09 10:10:50 [TRACE] module.securitygroup: eval: *terraform.EvalReadData
2021/04/09 10:10:50 [TRACE] EvalReadData: working on module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:50 [TRACE] Re-validating config for module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:50 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/09 10:10:50 [TRACE] module.ec2_role: eval: *terraform.EvalRefresh
2021/04/09 10:10:50 [TRACE] GRPCProvider: PlanResourceChange
2021/04/09 10:10:50 [TRACE] GRPCProvider: ReadResource
2021/04/09 10:10:50 [TRACE] GRPCProvider: PlanResourceChange
2021/04/09 10:10:50 [TRACE] EvalReadData: module.ec2_role.data.aws_caller_identity.current configuration is complete, so reading from provider
2021/04/09 10:10:51 [TRACE] GRPCProvider: ReadDataSource
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteState
2021/04/09 10:10:51 [TRACE] EvalWriteState: writing current state object for module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteDiff
2021/04/09 10:10:51 [TRACE] EvalWriteDiff: recorded Create change for module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.aws_iam_policy.create_iam_policy
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": visit complete
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": dynamic subgraph completed successfully
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.aws_iam_policy.create_iam_policy": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.ec2_policy.output.policy"
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.policy": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.policy": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.output.policy
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_iam_policy.create_iam_policy is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving value for module.ec2_policy.output.policy in state
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.policy in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.output.policy
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.policy": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.ec2_policy.output.id"
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.id": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.output.id
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_iam_policy.create_iam_policy is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.id from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.id in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.output.id
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.id": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.ec2_policy.output.description"
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.description": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.description": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.output.description
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_iam_policy.create_iam_policy is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving value for module.ec2_policy.output.description in state
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.description in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.output.description
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.description": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.ec2_policy.output.path"
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.path": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.path": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.output.path
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_iam_policy.create_iam_policy is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving value for module.ec2_policy.output.path in state
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.path in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.output.path
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.path": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.ec2_policy.output.name"
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.name": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.name": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.output.name
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_iam_policy.create_iam_policy is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.name from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.name in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.output.name
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.name": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.ec2_policy.output.arn"
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.arn": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.ec2_policy.output.arn
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.ec2_policy: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_iam_policy.create_iam_policy is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.ec2_policy.output.arn from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_policy.output.arn in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_policy.output.arn
2021/04/09 10:10:51 [TRACE] vertex "module.ec2_policy.output.arn": visit complete
2021-04-09T10:10:51.009+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:51 [DEBUG] Reading Caller Identity: timestamp=2021-04-09T10:10:51.001+0530
2021-04-09T10:10:51.009+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:51 [DEBUG] Waiting for state to become: [success]: timestamp=2021-04-09T10:10:51.004+0530
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:51 [TRACE] EvalWriteState: writing current state object for aws_ebs_volume.createebsvolume
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/09 10:10:51 [TRACE] EvalWriteDiff: recorded Create change for aws_ebs_volume.createebsvolume
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: aws_ebs_volume.createebsvolume
2021/04/09 10:10:51 [TRACE] vertex "aws_ebs_volume.createebsvolume": visit complete
2021/04/09 10:10:51 [TRACE] vertex "aws_ebs_volume.createebsvolume": dynamic subgraph completed successfully
2021/04/09 10:10:51 [TRACE] vertex "aws_ebs_volume.createebsvolume": visit complete
2021/04/09 10:10:51 [TRACE] EvalReadData: module.securitygroup.data.aws_caller_identity.securitygroup configuration is complete, so reading from provider
2021/04/09 10:10:51 [TRACE] GRPCProvider: ReadDataSource
2021/04/09 10:10:51 [WARN] Provider "aws" produced an invalid plan for module.myvpc.aws_vpc.create_vpc, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_generated_ipv6_cidr_block: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/04/09 10:10:51 [TRACE] module.myvpc: eval: *terraform.EvalWriteState
2021/04/09 10:10:51 [TRACE] EvalWriteState: writing current state object for module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:51 [TRACE] module.myvpc: eval: *terraform.EvalWriteDiff
2021-04-09T10:10:51.012+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:51 [DEBUG] Reading Caller Identity: timestamp=2021-04-09T10:10:51.011+0530
2021/04/09 10:10:51 [TRACE] EvalWriteDiff: recorded Create change for module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.aws_vpc.create_vpc
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": visit complete
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": dynamic subgraph completed successfully
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.aws_vpc.create_vpc": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.myvpc.output.arn"
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.output.arn": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.output.arn
2021/04/09 10:10:51 [TRACE] module.myvpc: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.myvpc: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.myvpc: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.myvpc.output.id"
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.output.id": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.myvpc.output.id
2021/04/09 10:10:51 [TRACE] module.myvpc: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.myvpc: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.myvpc: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_vpc.create_vpc is a single instance
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_vpc.create_vpc is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.myvpc.output.id from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.myvpc.output.arn from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.myvpc.output.id in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.output.id
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.myvpc.output.arn in changeset
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.output.id": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "output.vpcid"
2021/04/09 10:10:51 [TRACE] vertex "output.vpcid": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "output.vpcid": evaluating
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "aws_internet_gateway.prod-igw"
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.securitygroup.var.vpc_id"
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.var.vpc_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.mysubnet.var.vpc_id"
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.var.vpc_id": evaluating
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.var.vpc_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.var.vpc_id
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] vertex "aws_internet_gateway.prod-igw": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:51 [TRACE] vertex "aws_internet_gateway.prod-igw": expanding dynamic subgraph
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_internet_gateway.prod-igw - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:51 [DEBUG] Resource instance state not found for node "aws_internet_gateway.prod-igw", instance aws_internet_gateway.prod-igw
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: output.vpcid
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.var.vpc_id": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.var.vpc_id
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:51 [DEBUG] ReferenceTransformer: "aws_internet_gateway.prod-igw" references: []
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:51 [TRACE] vertex "aws_internet_gateway.prod-igw": entering dynamic subgraph
2021/04/09 10:10:51 [TRACE] dag/walk: updating graph
2021/04/09 10:10:51 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.prod-igw"
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "aws_internet_gateway.prod-igw"
2021/04/09 10:10:51 [TRACE] vertex "aws_internet_gateway.prod-igw": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:51 [TRACE] NodeRefreshableManagedResourceInstance: aws_internet_gateway.prod-igw has no existing state to refresh
2021/04/09 10:10:51 [TRACE] vertex "aws_internet_gateway.prod-igw": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: aws_internet_gateway.prod-igw
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/09 10:10:51 [TRACE] EvalReadState: reading state for aws_internet_gateway.prod-igw
2021/04/09 10:10:51 [TRACE] EvalReadState: no state present for aws_internet_gateway.prod-igw
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.var.vpc_id
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.var.vpc_id": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": expanding dynamic subgraph
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
module.mysubnet.aws_subnet.createsubnet - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:51 [DEBUG] Resource instance state not found for node "module.mysubnet.aws_subnet.createsubnet", instance module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:51 [TRACE] Re-validating config for "aws_internet_gateway.prod-igw"
2021/04/09 10:10:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:51 [DEBUG] ReferenceTransformer: "module.mysubnet.aws_subnet.createsubnet" references: []
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": entering dynamic subgraph
2021/04/09 10:10:51 [TRACE] dag/walk: updating graph
2021/04/09 10:10:51 [TRACE] dag/walk: added new vertex: "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:51 [TRACE] NodeRefreshableManagedResourceInstance: module.mysubnet.aws_subnet.createsubnet has no existing state to refresh
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.var.vpc_id
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.var.vpc_id": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": expanding dynamic subgraph
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
module.securitygroup.aws_security_group.create_security_group - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:51 [DEBUG] Resource instance state not found for node "module.securitygroup.aws_security_group.create_security_group", instance module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:51 [TRACE] GRPCProvider: PlanResourceChange
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing output.vpcid from state (it is now null)
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.myvpc.output.arn
2021/04/09 10:10:51 [TRACE] vertex "module.myvpc.output.arn": visit complete
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalGetProvider
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalReadState
2021/04/09 10:10:51 [TRACE] EvalReadState: reading state for module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:51 [DEBUG] ReferenceTransformer: "module.securitygroup.aws_security_group.create_security_group" references: []
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": entering dynamic subgraph
2021/04/09 10:10:51 [TRACE] dag/walk: updating graph
2021/04/09 10:10:51 [TRACE] EvalReadState: no state present for module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:51 [TRACE] dag/walk: added new vertex: "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:51 [TRACE] NodeRefreshableManagedResourceInstance: module.securitygroup.aws_security_group.create_security_group has no existing state to refresh
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalGetProvider
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalReadState
2021/04/09 10:10:51 [TRACE] EvalReadState: reading state for module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:51 [TRACE] EvalReadState: no state present for module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalDiff
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for output.vpcid in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: output.vpcid
2021/04/09 10:10:51 [TRACE] vertex "output.vpcid": visit complete
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:51 [TRACE] EvalWriteState: writing current state object for aws_internet_gateway.prod-igw
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalDiff
2021/04/09 10:10:51 [TRACE] EvalWriteDiff: recorded Create change for aws_internet_gateway.prod-igw
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: aws_internet_gateway.prod-igw
2021/04/09 10:10:51 [TRACE] vertex "aws_internet_gateway.prod-igw": visit complete
2021/04/09 10:10:51 [TRACE] vertex "aws_internet_gateway.prod-igw": dynamic subgraph completed successfully
2021/04/09 10:10:51 [TRACE] vertex "aws_internet_gateway.prod-igw": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "aws_route_table.prod-public-crt"
2021/04/09 10:10:51 [TRACE] vertex "aws_route_table.prod-public-crt": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:51 [TRACE] vertex "aws_route_table.prod-public-crt": expanding dynamic subgraph
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_route_table.prod-public-crt - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:51 [DEBUG] Resource instance state not found for node "aws_route_table.prod-public-crt", instance aws_route_table.prod-public-crt
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:51 [DEBUG] ReferenceTransformer: "aws_route_table.prod-public-crt" references: []
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:51 [TRACE] vertex "aws_route_table.prod-public-crt": entering dynamic subgraph
2021/04/09 10:10:51 [TRACE] dag/walk: updating graph
2021/04/09 10:10:51 [TRACE] dag/walk: added new vertex: "aws_route_table.prod-public-crt"
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "aws_route_table.prod-public-crt"
2021/04/09 10:10:51 [TRACE] vertex "aws_route_table.prod-public-crt": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:51 [TRACE] NodeRefreshableManagedResourceInstance: aws_route_table.prod-public-crt has no existing state to refresh
2021/04/09 10:10:51 [TRACE] vertex "aws_route_table.prod-public-crt": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: aws_route_table.prod-public-crt
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/09 10:10:51 [TRACE] EvalReadState: reading state for aws_route_table.prod-public-crt
2021/04/09 10:10:51 [TRACE] EvalReadState: no state present for aws_route_table.prod-public-crt
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_internet_gateway.prod-igw is a single instance
2021/04/09 10:10:51 [TRACE] Re-validating config for "module.mysubnet.aws_subnet.createsubnet"
2021/04/09 10:10:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:51 [TRACE] Re-validating config for "module.securitygroup.aws_security_group.create_security_group"
2021/04/09 10:10:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:51 [TRACE] Re-validating config for "aws_route_table.prod-public-crt"
2021/04/09 10:10:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/09 10:10:51 [TRACE] GRPCProvider: PlanResourceChange
2021/04/09 10:10:51 [TRACE] GRPCProvider: PlanResourceChange
2021-04-09T10:10:51.020+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:51 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-09T10:10:51.020+0530
2021-04-09T10:10:51.020+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:51 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-09T10:10:51.020+0530
2021/04/09 10:10:51 [TRACE] GRPCProvider: PlanResourceChange
2021/04/09 10:10:51 [WARN] Provider "aws" produced an invalid plan for aws_route_table.prod-public-crt, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .route: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"carrier_gateway_id":cty.StringVal(""), "cidr_block":cty.StringVal("0.0.0.0/0"), "destination_prefix_list_id":cty.StringVal(""), "egress_only_gateway_id":cty.StringVal(""), "gateway_id":cty.UnknownVal(cty.String), "instance_id":cty.StringVal(""), "ipv6_cidr_block":cty.StringVal(""), "local_gateway_id":cty.StringVal(""), "nat_gateway_id":cty.StringVal(""), "network_interface_id":cty.StringVal(""), "transit_gateway_id":cty.StringVal(""), "vpc_endpoint_id":cty.StringVal(""), "vpc_peering_connection_id":cty.StringVal("")})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"carrier_gateway_id":cty.NullVal(cty.String), "cidr_block":cty.StringVal("0.0.0.0/0"), "destination_prefix_list_id":cty.NullVal(cty.String), "egress_only_gateway_id":cty.NullVal(cty.String), "gateway_id":cty.UnknownVal(cty.String), "instance_id":cty.NullVal(cty.String), "ipv6_cidr_block":cty.NullVal(cty.String), "local_gateway_id":cty.NullVal(cty.String), "nat_gateway_id":cty.NullVal(cty.String), "network_interface_id":cty.NullVal(cty.String), "transit_gateway_id":cty.NullVal(cty.String), "vpc_endpoint_id":cty.NullVal(cty.String), "vpc_peering_connection_id":cty.NullVal(cty.String)})})
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:51 [TRACE] EvalWriteState: writing current state object for aws_route_table.prod-public-crt
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/09 10:10:51 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table.prod-public-crt
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: aws_route_table.prod-public-crt
2021/04/09 10:10:51 [TRACE] vertex "aws_route_table.prod-public-crt": visit complete
2021/04/09 10:10:51 [TRACE] vertex "aws_route_table.prod-public-crt": dynamic subgraph completed successfully
2021/04/09 10:10:51 [TRACE] vertex "aws_route_table.prod-public-crt": visit complete
2021/04/09 10:10:51 [WARN] Provider "aws" produced an invalid plan for module.mysubnet.aws_subnet.createsubnet, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalWriteState
2021/04/09 10:10:51 [TRACE] EvalWriteState: writing current state object for module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalWriteDiff
2021/04/09 10:10:51 [TRACE] EvalWriteDiff: recorded Create change for module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.aws_subnet.createsubnet
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": visit complete
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": dynamic subgraph completed successfully
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.aws_subnet.createsubnet": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.mysubnet.output.arn"
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.output.arn": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.output.arn
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.mysubnet.output.id"
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.output.id": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.mysubnet.output.id
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.mysubnet: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_subnet.createsubnet is a single instance
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_subnet.createsubnet is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.mysubnet.output.arn from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.mysubnet.output.arn in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.output.arn
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.output.arn": visit complete
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.mysubnet.output.id from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.mysubnet.output.id in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.mysubnet.output.id
2021/04/09 10:10:51 [TRACE] vertex "module.mysubnet.output.id": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.myec2-instance.var.subnet_id"
2021/04/09 10:10:51 [TRACE] vertex "module.myec2-instance.var.subnet_id": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:51 [TRACE] vertex "module.myec2-instance.var.subnet_id": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.subnet_id
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "output.subetid"
2021/04/09 10:10:51 [TRACE] vertex "output.subetid": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "output.subetid": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: output.subetid
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.subnet_id
2021/04/09 10:10:51 [TRACE] vertex "module.myec2-instance.var.subnet_id": visit complete
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing output.subetid from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for output.subetid in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: output.subetid
2021/04/09 10:10:51 [TRACE] vertex "output.subetid": visit complete
2021/04/09 10:10:51 [WARN] Provider "aws" produced an invalid plan for module.securitygroup.aws_security_group.create_security_group, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalWriteState
2021/04/09 10:10:51 [TRACE] EvalWriteState: writing current state object for module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalWriteDiff
2021/04/09 10:10:51 [TRACE] EvalWriteDiff: recorded Create change for module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.aws_security_group.create_security_group
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": visit complete
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": dynamic subgraph completed successfully
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.aws_security_group.create_security_group": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.securitygroup.output.name"
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.name": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.name": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.output.name
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.securitygroup.output.arn"
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.arn": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.output.arn
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_security_group.create_security_group is a single instance
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.securitygroup.output.id"
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.id": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.output.id
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving value for module.securitygroup.output.name in state
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.securitygroup.output.name in changeset
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_security_group.create_security_group is a single instance
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.output.name
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.name": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.securitygroup.output.description"
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.description": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_security_group.create_security_group is a single instance
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.description": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.securitygroup.output.description
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] module.securitygroup: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] GetResourceInstance: aws_security_group.create_security_group is a single instance
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.securitygroup.output.id from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.securitygroup.output.id in changeset
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving value for module.securitygroup.output.description in state
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.securitygroup.output.description in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.output.id
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.output.description
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing module.securitygroup.output.arn from state (it is now null)
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.description": visit complete
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.id": visit complete
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "module.myec2-instance.var.vpc_security_group_ids"
2021/04/09 10:10:51 [TRACE] vertex "module.myec2-instance.var.vpc_security_group_ids": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:10:51 [TRACE] vertex "module.myec2-instance.var.vpc_security_group_ids": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.vpc_security_group_ids
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for module.securitygroup.output.arn in changeset
2021/04/09 10:10:51 [TRACE] dag/walk: visiting "output.securitygroupid"
2021/04/09 10:10:51 [TRACE] vertex "output.securitygroupid": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:51 [TRACE] vertex "output.securitygroupid": evaluating
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.output.arn
2021/04/09 10:10:51 [TRACE] vertex "module.securitygroup.output.arn": visit complete
2021/04/09 10:10:51 [TRACE] [walkRefresh] Entering eval tree: output.securitygroupid
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:51 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.vpc_security_group_ids
2021/04/09 10:10:51 [TRACE] vertex "module.myec2-instance.var.vpc_security_group_ids": visit complete
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Removing output.securitygroupid from state (it is now null)
2021/04/09 10:10:51 [TRACE] EvalWriteOutput: Saving Create change for output.securitygroupid in changeset
2021/04/09 10:10:51 [TRACE] [walkRefresh] Exiting eval tree: output.securitygroupid
2021/04/09 10:10:51 [TRACE] vertex "output.securitygroupid": visit complete
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.placement_group" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.var.iam_instance_profile" is waiting for "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.aws_instance.ec2" is waiting for "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.primary_network_interface_id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "output.iam_instance_profile" is waiting for "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.arn" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.private_ip" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.password_data" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.subnet_id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.ec2_role.output.id" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.instance_state" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "output.id" is waiting for "module.myec2-instance.output.id"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "aws_volume_attachment.attachebsvolume" is waiting for "module.myec2-instance.output.id"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.public_ip" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.ec2_role.output.arn" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.private_dns" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.ec2_role.output.uniqe_id" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.ec2_role.output.name" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.availability_zone" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "module.myec2-instance.output.public_dns" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:52 [TRACE] dag/walk: vertex "aws_iam_instance_profile.ec2_profile" is waiting for "module.ec2_role.output.uniqe_id"
2021-04-09T10:10:52.991+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:52 [DEBUG] Received Caller Identity: {
  Account: "787798271832",
  Arn: "arn:aws:iam::787798271832:user/terraformpoc",
  UserId: "AIDA3O3DPU5MHRVELNHW5"
}: timestamp=2021-04-09T10:10:52.991+0530
2021/04/09 10:10:52 [TRACE] module.ec2_role: eval: *terraform.EvalIf
2021/04/09 10:10:52 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:52 [TRACE] module.ec2_role: eval: *terraform.EvalWriteState
2021/04/09 10:10:52 [TRACE] EvalWriteState: writing current state object for module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:52 [TRACE] module.ec2_role: eval: *terraform.EvalUpdateStateHook
2021/04/09 10:10:52 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.data.aws_caller_identity.current
2021/04/09 10:10:52 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": visit complete
2021/04/09 10:10:52 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": dynamic subgraph completed successfully
2021/04/09 10:10:52 [TRACE] vertex "module.ec2_role.data.aws_caller_identity.current": visit complete
2021-04-09T10:10:53.235+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:53 [DEBUG] Received Caller Identity: {
  Account: "787798271832",
  Arn: "arn:aws:iam::787798271832:user/terraformpoc",
  UserId: "AIDA3O3DPU5MHRVELNHW5"
}: timestamp=2021-04-09T10:10:53.219+0530
2021-04-09T10:10:53.235+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:10:53 [DEBUG] Received Caller Identity: {
  Account: "787798271832",
  Arn: "arn:aws:iam::787798271832:user/terraformpoc",
  UserId: "AIDA3O3DPU5MHRVELNHW5"
}: timestamp=2021-04-09T10:10:53.235+0530
2021/04/09 10:10:53 [TRACE] module.securitygroup: eval: *terraform.EvalIf
2021/04/09 10:10:53 [TRACE] module.securitygroup: eval: *terraform.EvalSequence
2021/04/09 10:10:53 [TRACE] module.securitygroup: eval: *terraform.EvalWriteState
2021/04/09 10:10:53 [TRACE] EvalWriteState: writing current state object for module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:53 [TRACE] module.securitygroup: eval: *terraform.EvalUpdateStateHook
2021/04/09 10:10:53 [TRACE] [walkRefresh] Exiting eval tree: module.securitygroup.data.aws_caller_identity.securitygroup
2021/04/09 10:10:53 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": visit complete
2021/04/09 10:10:53 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": dynamic subgraph completed successfully
2021/04/09 10:10:53 [TRACE] vertex "module.securitygroup.data.aws_caller_identity.securitygroup": visit complete
2021/04/09 10:10:53 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/09 10:10:53 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:53 [TRACE] EvalWriteState: writing current state object for data.aws_caller_identity.current
2021/04/09 10:10:53 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/04/09 10:10:53 [TRACE] [walkRefresh] Exiting eval tree: data.aws_caller_identity.current
2021/04/09 10:10:53 [TRACE] vertex "data.aws_caller_identity.current": visit complete
2021/04/09 10:10:53 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/09 10:10:53 [TRACE] vertex "data.aws_caller_identity.current": dynamic subgraph completed successfully
2021/04/09 10:10:53 [TRACE] vertex "data.aws_caller_identity.current": visit complete
2021/04/09 10:10:53 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:10:53 [TRACE] EvalWriteState: writing current state object for data.aws_availability_zones.available
2021/04/09 10:10:53 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/04/09 10:10:53 [TRACE] [walkRefresh] Exiting eval tree: data.aws_availability_zones.available
2021/04/09 10:10:53 [TRACE] vertex "data.aws_availability_zones.available": visit complete
2021/04/09 10:10:53 [TRACE] vertex "data.aws_availability_zones.available": dynamic subgraph completed successfully
2021/04/09 10:10:53 [TRACE] vertex "data.aws_availability_zones.available": visit complete
2021/04/09 10:10:56 [TRACE] dag/walk: vertex "root" is waiting for "module.myec2-instance.output.private_ip"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "aws_iam_instance_profile.ec2_profile" is waiting for "module.ec2_role.output.uniqe_id"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.var.iam_instance_profile" is waiting for "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.public_ip" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.placement_group" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.aws_instance.ec2" is waiting for "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.private_ip" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "output.iam_instance_profile" is waiting for "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.subnet_id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.ec2_role.output.name" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.instance_state" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.public_dns" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.private_dns" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.primary_network_interface_id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "output.id" is waiting for "module.myec2-instance.output.id"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.ec2_role.output.id" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "aws_volume_attachment.attachebsvolume" is waiting for "module.myec2-instance.output.id"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.ec2_role.output.uniqe_id" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.ec2_role.output.arn" is waiting for "module.ec2_role.aws_iam_role.create_iam_role"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.arn" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.password_data" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] dag/walk: vertex "module.myec2-instance.output.availability_zone" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalWriteState
2021/04/09 10:10:57 [TRACE] EvalWriteState: writing current state object for module.ec2_role.aws_iam_role.create_iam_role
2021/04/09 10:10:57 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.aws_iam_role.create_iam_role
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": visit complete
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": dynamic subgraph completed successfully
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.aws_iam_role.create_iam_role": visit complete
2021/04/09 10:10:57 [TRACE] dag/walk: visiting "module.ec2_role.output.name"
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.name": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.name": evaluating
2021/04/09 10:10:57 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.output.name
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalOpFilter
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:57 [TRACE] dag/walk: visiting "module.ec2_role.output.uniqe_id"
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.uniqe_id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.uniqe_id": evaluating
2021/04/09 10:10:57 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.output.uniqe_id
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalOpFilter
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:57 [TRACE] GetResourceInstance: aws_iam_role.create_iam_role is a single instance
2021/04/09 10:10:57 [TRACE] GetResourceInstance: aws_iam_role.create_iam_role is a single instance
2021/04/09 10:10:57 [TRACE] EvalWriteOutput: Saving value for module.ec2_role.output.name in state
2021/04/09 10:10:57 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_role.output.name in changeset
2021/04/09 10:10:57 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.output.name
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.name": visit complete
2021/04/09 10:10:57 [TRACE] dag/walk: visiting "module.ec2_role.output.id"
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.id": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:57 [TRACE] EvalWriteOutput: Saving value for module.ec2_role.output.uniqe_id in state
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.id": evaluating
2021/04/09 10:10:57 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.output.id
2021/04/09 10:10:57 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_role.output.uniqe_id in changeset
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalOpFilter
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:57 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.output.uniqe_id
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.uniqe_id": visit complete
2021/04/09 10:10:57 [TRACE] dag/walk: visiting "module.ec2_role.output.arn"
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.arn": evaluating
2021/04/09 10:10:57 [TRACE] [walkRefresh] Entering eval tree: module.ec2_role.output.arn
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalSequence
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalOpFilter
2021/04/09 10:10:57 [TRACE] module.ec2_role: eval: *terraform.EvalWriteOutput
2021/04/09 10:10:57 [TRACE] GetResourceInstance: aws_iam_role.create_iam_role is a single instance
2021/04/09 10:10:57 [TRACE] GetResourceInstance: aws_iam_role.create_iam_role is a single instance
2021/04/09 10:10:57 [TRACE] EvalWriteOutput: Saving value for module.ec2_role.output.id in state
2021/04/09 10:10:57 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_role.output.id in changeset
2021/04/09 10:10:57 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.output.id
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.id": visit complete
2021/04/09 10:10:57 [TRACE] EvalWriteOutput: Saving value for module.ec2_role.output.arn in state
2021/04/09 10:10:57 [TRACE] EvalWriteOutput: Saving Create change for module.ec2_role.output.arn in changeset
2021/04/09 10:10:57 [TRACE] [walkRefresh] Exiting eval tree: module.ec2_role.output.arn
2021/04/09 10:10:57 [TRACE] vertex "module.ec2_role.output.arn": visit complete
2021/04/09 10:10:57 [TRACE] dag/walk: visiting "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:57 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:10:57 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": expanding dynamic subgraph
2021/04/09 10:10:57 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:10:57 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_iam_instance_profile.ec2_profile - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:10:57 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:10:57 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:10:57 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:10:57 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:10:57 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:10:57 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:10:57 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:10:57 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.ec2_profile" references: []
2021/04/09 10:10:57 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:10:57 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:10:57 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:10:57 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": entering dynamic subgraph
2021/04/09 10:10:57 [TRACE] dag/walk: updating graph
2021/04/09 10:10:57 [TRACE] dag/walk: added new vertex: "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:57 [TRACE] dag/walk: visiting "aws_iam_instance_profile.ec2_profile"
2021/04/09 10:10:57 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:10:57 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_instance_profile.ec2_profile will be refreshed
2021/04/09 10:10:57 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": evaluating
2021/04/09 10:10:57 [TRACE] [walkRefresh] Entering eval tree: aws_iam_instance_profile.ec2_profile
2021/04/09 10:10:57 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:10:57 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/09 10:10:57 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/09 10:10:57 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.ec2_profile
2021/04/09 10:10:57 [TRACE] UpgradeResourceState: schema version of aws_iam_instance_profile.ec2_profile is still 0; calling provider "aws" for any other minor fixups
2021/04/09 10:10:57 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/09 10:10:57 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/09 10:10:57 [TRACE] GRPCProvider: ReadResource
2021/04/09 10:10:58 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_volume_attachment.attachebsvolume"
2021/04/09 10:11:00 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/09 10:11:00 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.ec2_profile
2021/04/09 10:11:00 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_instance_profile.ec2_profile
2021/04/09 10:11:00 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": visit complete
2021/04/09 10:11:00 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": dynamic subgraph completed successfully
2021/04/09 10:11:00 [TRACE] vertex "aws_iam_instance_profile.ec2_profile": visit complete
2021/04/09 10:11:00 [TRACE] dag/walk: visiting "module.myec2-instance.var.iam_instance_profile"
2021/04/09 10:11:00 [TRACE] vertex "module.myec2-instance.var.iam_instance_profile": starting visit (*terraform.NodeApplyableModuleVariable)
2021/04/09 10:11:00 [TRACE] vertex "module.myec2-instance.var.iam_instance_profile": evaluating
2021/04/09 10:11:00 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.var.iam_instance_profile
2021/04/09 10:11:00 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:11:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:11:00 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2021/04/09 10:11:00 [TRACE] GetResourceInstance: aws_iam_instance_profile.ec2_profile is a single instance
2021/04/09 10:11:00 [TRACE] dag/walk: visiting "output.iam_instance_profile"
2021/04/09 10:11:00 [TRACE] vertex "output.iam_instance_profile": starting visit (*terraform.NodeApplyableOutput)
2021/04/09 10:11:00 [TRACE] vertex "output.iam_instance_profile": evaluating
2021/04/09 10:11:00 [TRACE] [walkRefresh] Entering eval tree: output.iam_instance_profile
2021/04/09 10:11:00 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/09 10:11:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/09 10:11:00 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/09 10:11:00 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2021/04/09 10:11:00 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.var.iam_instance_profile
2021/04/09 10:11:00 [TRACE] GetResourceInstance: aws_iam_instance_profile.ec2_profile is a single instance
2021/04/09 10:11:00 [TRACE] vertex "module.myec2-instance.var.iam_instance_profile": visit complete
2021/04/09 10:11:00 [TRACE] dag/walk: visiting "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:00 [TRACE] vertex "module.myec2-instance.aws_instance.ec2": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/09 10:11:00 [TRACE] vertex "module.myec2-instance.aws_instance.ec2": expanding dynamic subgraph
2021/04/09 10:11:00 [TRACE] EvalWriteOutput: Saving value for output.iam_instance_profile in state
2021/04/09 10:11:00 [TRACE] EvalWriteOutput: Saving Create change for output.iam_instance_profile in changeset
2021/04/09 10:11:00 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/09 10:11:00 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
module.myec2-instance.aws_instance.ec2[0] - *terraform.NodeRefreshableManagedResourceInstance
------
2021/04/09 10:11:00 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/09 10:11:00 [TRACE] [walkRefresh] Exiting eval tree: output.iam_instance_profile
2021/04/09 10:11:00 [TRACE] vertex "output.iam_instance_profile": visit complete
2021/04/09 10:11:00 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/09 10:11:00 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/09 10:11:00 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/09 10:11:00 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/09 10:11:00 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/09 10:11:00 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/09 10:11:00 [DEBUG] ReferenceTransformer: "module.myec2-instance.aws_instance.ec2[0]" references: []
2021/04/09 10:11:00 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/09 10:11:00 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/09 10:11:00 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/09 10:11:00 [TRACE] vertex "module.myec2-instance.aws_instance.ec2": entering dynamic subgraph
2021/04/09 10:11:00 [TRACE] dag/walk: updating graph
2021/04/09 10:11:00 [TRACE] dag/walk: added new vertex: "module.myec2-instance.aws_instance.ec2[0]"
2021/04/09 10:11:00 [TRACE] dag/walk: visiting "module.myec2-instance.aws_instance.ec2[0]"
2021/04/09 10:11:00 [TRACE] vertex "module.myec2-instance.aws_instance.ec2[0]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/09 10:11:00 [TRACE] NodeRefreshableManagedResourceInstance: module.myec2-instance.aws_instance.ec2[0] will be refreshed
2021/04/09 10:11:00 [TRACE] vertex "module.myec2-instance.aws_instance.ec2[0]": evaluating
2021/04/09 10:11:00 [TRACE] [walkRefresh] Entering eval tree: module.myec2-instance.aws_instance.ec2[0]
2021/04/09 10:11:00 [TRACE] module.myec2-instance: eval: *terraform.EvalSequence
2021/04/09 10:11:00 [TRACE] module.myec2-instance: eval: *terraform.EvalGetProvider
2021/04/09 10:11:00 [TRACE] module.myec2-instance: eval: *terraform.EvalReadState
2021/04/09 10:11:00 [TRACE] EvalReadState: reading state for module.myec2-instance.aws_instance.ec2[0]
2021/04/09 10:11:00 [TRACE] UpgradeResourceState: schema version of module.myec2-instance.aws_instance.ec2[0] is still 1; calling provider "aws" for any other minor fixups
2021/04/09 10:11:00 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/09 10:11:00 [TRACE] module.myec2-instance: eval: *terraform.EvalRefresh
2021/04/09 10:11:00 [TRACE] GRPCProvider: ReadResource
2021/04/09 10:11:01 [TRACE] dag/walk: vertex "root" is waiting for "module.myec2-instance.output.private_ip"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.arn" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.availability_zone" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.instance_state" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.subnet_id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.private_dns" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.primary_network_interface_id" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "aws_volume_attachment.attachebsvolume" is waiting for "module.myec2-instance.output.id"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "output.id" is waiting for "module.myec2-instance.output.id"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.password_data" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.private_ip" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.placement_group" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.public_dns" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:02 [TRACE] dag/walk: vertex "module.myec2-instance.output.public_ip" is waiting for "module.myec2-instance.aws_instance.ec2"
2021/04/09 10:11:03 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_volume_attachment.attachebsvolume"
2021-04-09T10:11:04.250+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:11:04 [DEBUG] Setting Security Group IDs: []string{"sg-38c1124d"}: timestamp=2021-04-09T10:11:04.250+0530
2021-04-09T10:11:04.250+0530 [INFO]  plugin.terraform-provider-aws_v3.35.0_x5.exe: 2021/04/09 10:11:04 [DEBUG] Setting Security Group Names: []string{"default"}: timestamp=2021-04-09T10:11:04.250+0530
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: panic: interface conversion: interface {} is nil, not []map[string]interface {}
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: goroutine 199 [running]:
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: github.com/terraform-providers/terraform-provider-aws/aws.readBlockDevices(0xc00169ff80, 0xc002314000, 0xc000006fe0, 0x0, 0x0)
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-aws/aws/resource_aws_instance.go:1682 +0x799
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: github.com/terraform-providers/terraform-provider-aws/aws.resourceAwsInstanceRead(0xc00169ff80, 0x5e37aa0, 0xc0016a4000, 0xc0022105f0, 0xc000071c00)
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-aws/aws/resource_aws_instance.go:943 +0x187f
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema.(*Resource).read(0xc0008cf180, 0x75f30c8, 0xc0021db640, 0xc00169ff80, 0x5e37aa0, 0xc0016a4000, 0x0, 0x0, 0x0)
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-sdk/v2@v2.5.0/helper/schema/resource.go:335 +0x1fb
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema.(*Resource).RefreshWithoutUpgrade(0xc0008cf180, 0x75f30c8, 0xc0021db640, 0xc0020ef340, 0x5e37aa0, 0xc0016a4000, 0x0, 0x0, 0xc002312360, 0x0)
2021-04-09T10:11:04.281+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-sdk/v2@v2.5.0/helper/schema/resource.go:624 +0x1cb
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema.(*GRPCProviderServer).ReadResource(0xc00008e600, 0x75f30c8, 0xc0021db640, 0xc0021db680, 0xc0021db640, 0x40beca, 0x66b5a20)
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-sdk/v2@v2.5.0/helper/schema/grpc_provider.go:575 +0x45b
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).ReadResource(0xc001e9ea20, 0x75f3170, 0xc0021db640, 0xc0021f0ae0, 0xc001e9ea20, 0xc0021f2600, 0xc001927ba0)
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.2.1/tfprotov5/server/server.go:298 +0x108
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: github.com/hashicorp/terraform-plugin-go/tfprotov5/internal/tfplugin5._Provider_ReadResource_Handler(0x695a3e0, 0xc001e9ea20, 0x75f3170, 0xc0021f2600, 0xc0021f0a80, 0x0, 0x75f3170, 0xc0021f2600, 0xc000198300, 0x617)
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.2.1/tfprotov5/internal/tfplugin5/tfplugin5_grpc.pb.go:344 +0x222
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000377340, 0x7613318, 0xc001ec2780, 0xc0018d5000, 0xc0005c7cb0, 0xaa47070, 0x0, 0x0, 0x0)
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1194 +0x52b
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: google.golang.org/grpc.(*Server).handleStream(0xc000377340, 0x7613318, 0xc001ec2780, 0xc0018d5000, 0x0)
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1517 +0xd0c
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: google.golang.org/grpc.(*Server).serveStreams.func1.2(0xc0005c0790, 0xc000377340, 0x7613318, 0xc001ec2780, 0xc0018d5000)
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:859 +0xb2
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: created by google.golang.org/grpc.(*Server).serveStreams.func1
2021-04-09T10:11:04.282+0530 [DEBUG] plugin.terraform-provider-aws_v3.35.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:857 +0x1fd
2021/04/09 10:11:04 [ERROR] module.myec2-instance: eval: *terraform.EvalRefresh, err: rpc error: code = Unavailable desc = transport is closing
2021/04/09 10:11:04 [ERROR] module.myec2-instance: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2021/04/09 10:11:04 [TRACE] [walkRefresh] Exiting eval tree: module.myec2-instance.aws_instance.ec2[0]
2021/04/09 10:11:04 [TRACE] vertex "module.myec2-instance.aws_instance.ec2[0]": visit complete
2021/04/09 10:11:04 [TRACE] vertex "module.myec2-instance.aws_instance.ec2": dynamic subgraph encountered errors
2021/04/09 10:11:04 [TRACE] vertex "module.myec2-instance.aws_instance.ec2": visit complete
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.arn" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.public_ip" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.public_dns" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.placement_group" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.private_ip" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.password_data" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.primary_network_interface_id" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.private_dns" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.subnet_id" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.instance_state" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.id" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "aws_volume_attachment.attachebsvolume" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "provider.aws (close)" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "module.myec2-instance.output.availability_zone" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "output.id" errored, so skipping
2021/04/09 10:11:04 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021-04-09T10:11:04.313+0530 [DEBUG] plugin: plugin process exited: path=C:\Users\sri\Desktop\terraform-module\ec2\.terraform\plugins\windows_amd64\terraform-provider-aws_v3.35.0_x5.exe pid=11252 error="exit status 2"
2021-04-09T10:11:04.313+0530 [DEBUG] plugin: plugin exited
